{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownerShip",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "contractowner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseTokenURI",
          "type": "string"
        }
      ],
      "name": "tokendetails",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "token",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_ad",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerShip\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"token\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ad\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"contractowner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"name\":\"tokendetails\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x5ebd0b201a2e6cc8606a51c3b5daf3df3a9855b2c29afa612849c5addafda0a9\",\"urls\":[\"bzz-raw://57491f06a21490645e1ad7b0d2b07284077c88d46347d05b9abb22959f5e6dbb\",\"dweb:/ipfs/QmTbWjGgYCgkKZVSunu97WCc3eHjCQkP6NZgHhbyan2Hth\"]},\"/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xdc8a121e39e9c08616ddcfbdf570ad57aa3e1abd5edbeda318b2aff6fbe75e13\",\"urls\":[\"bzz-raw://6f53b2a0d58b8c53b1f1e2aa34875f38c5e4c0caf6c878c83287ed164bff6be2\",\"dweb:/ipfs/QmbJVpS2y8yDW31UpetJGcmst3gvkeTQbCeUnLADXtK6i8\"]},\"/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/verifier.sol\":{\"keccak256\":\"0x53a99dcd974064171c23819ee658da17efb3c5a0d6db98a124a6e3750d5391de\",\"urls\":[\"bzz-raw://958566e39e6ae93c2000605db72aaa30c62d9672777e63b96e5932a1b5924ba7\",\"dweb:/ipfs/QmXo2R7QHeiPjDAWmeq2uhkk77ektAXVgZH3y1eUrLuVu2\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003bab38038062003bab8339818101604052620000379190810190620003e5565b6040518060400160405280600481526020017f4e45524f000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e524f00000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162003b6c603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9e38ac15fb6f429cb4c1d68a79943e344c4ce37b43debdea3555daa570f53610336040516200012e919062000422565b60405180910390a160008060146101000a81548160ff0219169083151502179055507fd0c52a3fed4b5fe0c5867ea0c2c7c716e02a7edfdc80ce86b1c24a91ec9c2e9a3360405162000181919062000422565b60405180910390a1620001a16301ffc9a760e01b6200027f60201b60201c565b620001b96380ac58cd60e01b6200027f60201b60201c565b620001d163780e9d6360e01b6200027f60201b60201c565b8260109080519060200190620001e99291906200031f565b508160119080519060200190620002029291906200031f565b5080601290805190602001906200021b9291906200031f565b5062000234635b5e139f60e01b6200027f60201b60201c565b50505080601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620004c9565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002b357600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036257805160ff191683800117855562000393565b8280016001018555821562000393579182015b828111156200039257825182559160200191906001019062000375565b5b509050620003a29190620003a6565b5090565b620003cb91905b80821115620003c7576000816000905550600101620003ad565b5090565b90565b600081519050620003df81620004af565b92915050565b600060208284031215620003f857600080fd5b60006200040884828501620003ce565b91505092915050565b6200041c8162000473565b82525050565b600060208201905062000439600083018462000411565b92915050565b60006200044c8262000453565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004808262000487565b9050919050565b600062000494826200049b565b9050919050565b6000620004a88262000453565b9050919050565b620004ba816200043f565b8114620004c657600080fd5b50565b61369380620004d96000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80635d85b30b116100c3578063bdc32be01161007c578063bdc32be0146103bd578063c87b56dd146103db578063d3fc98641461040b578063e985e9c51461043b578063f2aa06831461046b578063f2fde38b1461049b57610158565b80635d85b30b146102ed5780636352211e1461030957806370a08231146103395780639ad46ee814610369578063a22cb46514610385578063b88d4fde146103a157610158565b80632f745c59116101155780632f745c591461022f57806338bbfa501461025f5780633f3108f71461027b57806342842e0e146102855780634f6ccce7146102a15780634f8bd9b6146102d157610158565b806301ffc9a71461015d578063081812fc1461018d578063095ea7b3146101bd57806318160ddd146101d957806323b872dd146101f757806327dc297e14610213575b600080fd5b61017760048036036101729190810190612a62565b6104b7565b60405161018491906131ba565b60405180910390f35b6101a760048036036101a29190810190612b58565b61051f565b6040516101b49190613138565b60405180910390f35b6101d760048036036101d2919081019061280f565b61055c565b005b6101e1610708565b6040516101ee9190613322565b60405180910390f35b610211600480360361020c9190810190612709565b610715565b005b61022d60048036036102289190810190612940565b610738565b005b6102496004803603610244919081019061280f565b61077b565b6040516102569190613322565b60405180910390f35b61027960048036036102749190810190612994565b6107ee565b005b6102836107f3565b005b61029f600480360361029a9190810190612709565b6108a0565b005b6102bb60048036036102b69190810190612b58565b6108c0565b6040516102c89190613322565b60405180910390f35b6102eb60048036036102e69190810190612a13565b6108f4565b005b61030760048036036103029190810190612ab4565b6109a2565b005b610323600480360361031e9190810190612b58565b6109e0565b6040516103309190613138565b60405180910390f35b610353600480360361034e91908101906126a4565b610a1d565b6040516103609190613322565b60405180910390f35b610383600480360361037e91908101906126a4565b610a6d565b005b61039f600480360361039a91908101906127d3565b610ab0565b005b6103bb60048036036103b69190810190612758565b610be6565b005b6103c5610c0c565b6040516103d291906131d5565b60405180910390f35b6103f560048036036103f09190810190612b58565b610cae565b60405161040291906131d5565b60405180910390f35b6104256004803603610420919081019061284b565b610d75565b60405161043291906131ba565b60405180910390f35b610455600480360361045091908101906126cd565b610dee565b60405161046291906131ba565b60405180910390f35b610485600480360361048091908101906128b2565b610e82565b60405161049291906131ba565b60405180910390f35b6104b560048036036104b091908101906126a4565b6110aa565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105b557600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e906132b7565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600980549050905090565b61071f33826111b4565b61072857600080fd5b610733838383611249565b505050565b610777828260006040519080825280601f01601f1916602001820160405280156107715781602001600182028038833980820191505090505b506107ee565b5050565b600061078683610a1d565b821061079157600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106107db57fe5b9060005260206000200154905092915050565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084c57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516108969190613153565b60405180910390a1565b6108bb83838360405180602001604052806000815250610be6565b505050565b60006108ca610708565b82106108d557600080fd5b600982815481106108e257fe5b90600052602060002001549050919050565b816015600085815260200190815260200160002060000181905550806015600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d828260405161099592919061333d565b60405180910390a1505050565b8585601091906109b39291906121ed565b508383601191906109c59291906121ed565b508181601291906109d79291906121ed565b50505050505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a66600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061126d565b9050919050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ae957600080fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bda91906131ba565b60405180910390a35050565b610bf1848484610715565b610bfd8484848461127b565b610c0657600080fd5b50505050565b606060128054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ca45780601f10610c7957610100808354040283529160200191610ca4565b820191906000526020600020905b815481529060010190602001808311610c8757829003601f168201915b5050505050905090565b6060610cb982611392565b610cc257600080fd5b601360008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d695780601f10610d3e57610100808354040283529160200191610d69565b820191906000526020600020905b815481529060010190602001808311610d4c57829003601f168201915b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dd057600080fd5b610dda8484611404565b610de383611425565b600190509392505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610ee19291906132f7565b60206040518083038186803b158015610ef957600080fd5b505afa158015610f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f319190810190612917565b610f70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6790613237565b60405180910390fd5b600083600001516000015184600001516020015185602001516000015186602001516020015187604001516000015188604001516020015188604051602001610fbf97969594939291906130b7565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461107c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611073906132d7565b60405180910390fd5b6110878186886108f4565b6060611091610c0c565b905061109e878783610d75565b92505050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461110357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116890613217565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806111c0836109e0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061122f57508373ffffffffffffffffffffffffffffffffffffffff166112178461051f565b73ffffffffffffffffffffffffffffffffffffffff16145b80611240575061123f8185610dee565b5b91505092915050565b611254838383611543565b61125e8382611770565b611268828261190e565b505050565b600081600001549050919050565b600061129c8473ffffffffffffffffffffffffffffffffffffffff166119d5565b6112a9576001905061138a565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016112ea949392919061316e565b602060405180830381600087803b15801561130457600080fd5b505af1158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061133c9190810190612a8b565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b61140e8282611a20565b611418828261190e565b61142181611bd2565b5050565b61142e81611392565b61146d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146490613297565b60405180910390fd5b61151960128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115065780601f106114db57610100808354040283529160200191611506565b820191906000526020600020905b8154815290600101906020018083116114e957829003601f168201915b505050505061151483611c1e565b611d4b565b60136000838152602001908152602001600020908051906020019061153f92919061226d565b5050565b8273ffffffffffffffffffffffffffffffffffffffff16611563826109e0565b73ffffffffffffffffffffffffffffffffffffffff16146115b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b090613257565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161e90613217565b60405180910390fd5b61163081611d8f565b611677600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e4d565b6116be600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e70565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006117c86001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611e8690919063ffffffff16565b90506000600860008481526020019081526020016000205490508181146118b5576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061183557fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061188d57fe5b9060005260206000200181905550816008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361190791906122ed565b5050505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506008600083815260200190815260200160002081905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611a1757506000801b8214155b92505050919050565b611a2981611392565b15611a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6090613277565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ad9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad0906131f7565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b72600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e70565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611c66576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611d46565b600082905060005b60008214611c90578080600101915050600a8281611c8857fe5b049150611c6e565b6060816040519080825280601f01601f191660200182016040528015611cc55781602001600182028038833980820191505090505b50905060006001830390505b60008614611d3e57600a8681611ce357fe5b0660300160f81b82828060019003935081518110611cfd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611d3657fe5b049550611cd1565b819450505050505b919050565b6060611d878383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250611ed0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e4a5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611e6560018260000154611e8690919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000611ec883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612192565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015611f2c5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015611fb157888181518110611f5857fe5b602001015160f81c60f81b838380600101945081518110611f7557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050611f43565b600090505b875181101561202457878181518110611fcb57fe5b602001015160f81c60f81b838380600101945081518110611fe857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050611fb6565b600090505b86518110156120975786818151811061203e57fe5b602001015160f81c60f81b83838060010194508151811061205b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612029565b600090505b855181101561210a578581815181106120b157fe5b602001015160f81c60f81b8383806001019450815181106120ce57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061209c565b600090505b845181101561217d5784818151811061212457fe5b602001015160f81c60f81b83838060010194508151811061214157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061210f565b82995050505050505050505095945050505050565b60008383111582906121da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d191906131d5565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061222e57803560ff191683800117855561225c565b8280016001018555821561225c579182015b8281111561225b578235825591602001919060010190612240565b5b5090506122699190612319565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106122ae57805160ff19168380011785556122dc565b828001600101855582156122dc579182015b828111156122db5782518255916020019190600101906122c0565b5b5090506122e99190612319565b5090565b815481835581811115612314578183600052602060002091820191016123139190612319565b5b505050565b61233b91905b8082111561233757600081600090555060010161231f565b5090565b90565b60008135905061234d816135dd565b92915050565b600082601f83011261236457600080fd5b600261237761237282613393565b613366565b9150818385602084028201111561238d57600080fd5b60005b838110156123bd57816123a3888261268f565b845260208401935060208301925050600181019050612390565b5050505092915050565b600082601f8301126123d857600080fd5b60026123eb6123e6826133b5565b613366565b9150818385602084028201111561240157600080fd5b60005b838110156124315781612417888261268f565b845260208401935060208301925050600181019050612404565b5050505092915050565b60008135905061244a816135f4565b92915050565b60008151905061245f816135f4565b92915050565b6000813590506124748161360b565b92915050565b60008135905061248981613622565b92915050565b60008151905061249e81613622565b92915050565b600082601f8301126124b557600080fd5b81356124c86124c3826133d7565b613366565b915080825260208301602083018583830111156124e457600080fd5b6124ef838284613580565b50505092915050565b60008083601f84011261250a57600080fd5b8235905067ffffffffffffffff81111561252357600080fd5b60208301915083600182028301111561253b57600080fd5b9250929050565b600082601f83011261255357600080fd5b813561256661256182613403565b613366565b9150808252602083016020830185838301111561258257600080fd5b61258d838284613580565b50505092915050565b6000604082840312156125a857600080fd5b6125b26040613366565b905060006125c28482850161268f565b60008301525060206125d68482850161268f565b60208301525092915050565b6000608082840312156125f457600080fd5b6125fe6040613366565b9050600061260e84828501612353565b600083015250604061262284828501612353565b60208301525092915050565b6000610100828403121561264157600080fd5b61264b6060613366565b9050600061265b84828501612596565b600083015250604061266f848285016125e2565b60208301525060c061268384828501612596565b60408301525092915050565b60008135905061269e81613639565b92915050565b6000602082840312156126b657600080fd5b60006126c48482850161233e565b91505092915050565b600080604083850312156126e057600080fd5b60006126ee8582860161233e565b92505060206126ff8582860161233e565b9150509250929050565b60008060006060848603121561271e57600080fd5b600061272c8682870161233e565b935050602061273d8682870161233e565b925050604061274e8682870161268f565b9150509250925092565b6000806000806080858703121561276e57600080fd5b600061277c8782880161233e565b945050602061278d8782880161233e565b935050604061279e8782880161268f565b925050606085013567ffffffffffffffff8111156127bb57600080fd5b6127c7878288016124a4565b91505092959194509250565b600080604083850312156127e657600080fd5b60006127f48582860161233e565b92505060206128058582860161243b565b9150509250929050565b6000806040838503121561282257600080fd5b60006128308582860161233e565b92505060206128418582860161268f565b9150509250929050565b60008060006060848603121561286057600080fd5b600061286e8682870161233e565b935050602061287f8682870161268f565b925050604084013567ffffffffffffffff81111561289c57600080fd5b6128a886828701612542565b9150509250925092565b60008060008061018085870312156128c957600080fd5b60006128d78782880161233e565b94505060206128e88782880161268f565b93505060406128f98782880161262e565b92505061014061290b878288016123c7565b91505092959194509250565b60006020828403121561292957600080fd5b600061293784828501612450565b91505092915050565b6000806040838503121561295357600080fd5b600061296185828601612465565b925050602083013567ffffffffffffffff81111561297e57600080fd5b61298a85828601612542565b9150509250929050565b6000806000606084860312156129a957600080fd5b60006129b786828701612465565b935050602084013567ffffffffffffffff8111156129d457600080fd5b6129e086828701612542565b925050604084013567ffffffffffffffff8111156129fd57600080fd5b612a09868287016124a4565b9150509250925092565b600080600060608486031215612a2857600080fd5b6000612a3686828701612465565b9350506020612a478682870161268f565b9250506040612a588682870161233e565b9150509250925092565b600060208284031215612a7457600080fd5b6000612a828482850161247a565b91505092915050565b600060208284031215612a9d57600080fd5b6000612aab8482850161248f565b91505092915050565b60008060008060008060608789031215612acd57600080fd5b600087013567ffffffffffffffff811115612ae757600080fd5b612af389828a016124f8565b9650965050602087013567ffffffffffffffff811115612b1257600080fd5b612b1e89828a016124f8565b9450945050604087013567ffffffffffffffff811115612b3d57600080fd5b612b4989828a016124f8565b92509250509295509295509295565b600060208284031215612b6a57600080fd5b6000612b788482850161268f565b91505092915050565b6000612b8d8383613073565b60208301905092915050565b6000612ba58383613091565b60208301905092915050565b612bba8161354a565b82525050565b612bc9816134cc565b82525050565b612bd88161344e565b612be28184613494565b9250612bed82613439565b8060005b83811015612c1e578151612c058782612b81565b9650612c108361347c565b925050600181019050612bf1565b505050505050565b612c2f8161344e565b612c39818461349f565b9250612c4482613439565b8060005b83811015612c75578151612c5c8782612b99565b9650612c678361347c565b925050600181019050612c48565b505050505050565b612c8681613443565b612c908184613489565b9250612c9b8261342f565b8060005b83811015612ccc578151612cb38782612b81565b9650612cbe8361346f565b925050600181019050612c9f565b505050505050565b612cdd81613443565b612ce7818461349f565b9250612cf28261342f565b8060005b83811015612d23578151612d0a8782612b99565b9650612d158361346f565b925050600181019050612cf6565b505050505050565b612d34816134de565b82525050565b6000612d4582613459565b612d4f81856134aa565b9350612d5f81856020860161358f565b612d68816135cc565b840191505092915050565b6000612d7e82613464565b612d8881856134bb565b9350612d9881856020860161358f565b612da1816135cc565b840191505092915050565b6000612db96014836134bb565b91507f41646472657373206973206e6f742076616c69640000000000000000000000006000830152602082019050919050565b6000612df9600f836134bb565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b6000612e396011836134bb565b91507f4e6f7420612076616c69642070726f6f660000000000000000000000000000006000830152602082019050919050565b6000612e79601a836134bb565b91507f4e6f742061206f776e6572206f6620676976656e20746f6b656e0000000000006000830152602082019050919050565b6000612eb96014836134bb565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000612ef96014836134bb565b91507f546f6b656e20646f6573206e6f742065786973740000000000000000000000006000830152602082019050919050565b6000612f396030836134bb565b91507f4a75737420612067656e746c652072656d696e64657220796f7520617265206160008301527f6c726561647920746865206f776e6572000000000000000000000000000000006020830152604082019050919050565b6000612f9f6017836134bb565b91507f536f6c7574696f6e20616c7265616479206578697374730000000000000000006000830152602082019050919050565b604082016000820151612fe86000850182613073565b506020820151612ffb6020850182613073565b50505050565b6080820160008201516130176000850182612c7d565b50602082015161302a6040850182612c7d565b50505050565b610100820160008201516130476000850182612fd2565b50602082015161305a6040850182613001565b50604082015161306d60c0850182612fd2565b50505050565b61307c81613540565b82525050565b61308b81613540565b82525050565b61309a81613540565b82525050565b6130b16130ac82613540565b6135c2565b82525050565b60006130c3828a6130a0565b6020820191506130d382896130a0565b6020820191506130e38288612cd4565b6040820191506130f38287612cd4565b60408201915061310382866130a0565b60208201915061311382856130a0565b6020820191506131238284612c26565b60408201915081905098975050505050505050565b600060208201905061314d6000830184612bc0565b92915050565b60006020820190506131686000830184612bb1565b92915050565b60006080820190506131836000830187612bb1565b6131906020830186612bc0565b61319d6040830185613082565b81810360608301526131af8184612d3a565b905095945050505050565b60006020820190506131cf6000830184612d2b565b92915050565b600060208201905081810360008301526131ef8184612d73565b905092915050565b6000602082019050818103600083015261321081612dac565b9050919050565b6000602082019050818103600083015261323081612dec565b9050919050565b6000602082019050818103600083015261325081612e2c565b9050919050565b6000602082019050818103600083015261327081612e6c565b9050919050565b6000602082019050818103600083015261329081612eac565b9050919050565b600060208201905081810360008301526132b081612eec565b9050919050565b600060208201905081810360008301526132d081612f2c565b9050919050565b600060208201905081810360008301526132f081612f92565b9050919050565b60006101408201905061330d6000830185613030565b61331b610100830184612bcf565b9392505050565b60006020820190506133376000830184613082565b92915050565b60006040820190506133526000830185613082565b61335f6020830184612bc0565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561338957600080fd5b8060405250919050565b600067ffffffffffffffff8211156133aa57600080fd5b602082029050919050565b600067ffffffffffffffff8211156133cc57600080fd5b602082029050919050565b600067ffffffffffffffff8211156133ee57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561341a57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006134d782613520565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006135558261355c565b9050919050565b60006135678261356e565b9050919050565b600061357982613520565b9050919050565b82818337600083830152505050565b60005b838110156135ad578082015181840152602081019050613592565b838111156135bc576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b6135e6816134cc565b81146135f157600080fd5b50565b6135fd816134de565b811461360857600080fd5b50565b613614816134ea565b811461361f57600080fd5b50565b61362b816134f4565b811461363657600080fd5b50565b61364281613540565b811461364d57600080fd5b5056fea365627a7a72315820a78a3f3bcf1009e9f0ce290565b82009a97c8a2abe4ab455bbad19e96198fe856c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80635d85b30b116100c3578063bdc32be01161007c578063bdc32be0146103bd578063c87b56dd146103db578063d3fc98641461040b578063e985e9c51461043b578063f2aa06831461046b578063f2fde38b1461049b57610158565b80635d85b30b146102ed5780636352211e1461030957806370a08231146103395780639ad46ee814610369578063a22cb46514610385578063b88d4fde146103a157610158565b80632f745c59116101155780632f745c591461022f57806338bbfa501461025f5780633f3108f71461027b57806342842e0e146102855780634f6ccce7146102a15780634f8bd9b6146102d157610158565b806301ffc9a71461015d578063081812fc1461018d578063095ea7b3146101bd57806318160ddd146101d957806323b872dd146101f757806327dc297e14610213575b600080fd5b61017760048036036101729190810190612a62565b6104b7565b60405161018491906131ba565b60405180910390f35b6101a760048036036101a29190810190612b58565b61051f565b6040516101b49190613138565b60405180910390f35b6101d760048036036101d2919081019061280f565b61055c565b005b6101e1610708565b6040516101ee9190613322565b60405180910390f35b610211600480360361020c9190810190612709565b610715565b005b61022d60048036036102289190810190612940565b610738565b005b6102496004803603610244919081019061280f565b61077b565b6040516102569190613322565b60405180910390f35b61027960048036036102749190810190612994565b6107ee565b005b6102836107f3565b005b61029f600480360361029a9190810190612709565b6108a0565b005b6102bb60048036036102b69190810190612b58565b6108c0565b6040516102c89190613322565b60405180910390f35b6102eb60048036036102e69190810190612a13565b6108f4565b005b61030760048036036103029190810190612ab4565b6109a2565b005b610323600480360361031e9190810190612b58565b6109e0565b6040516103309190613138565b60405180910390f35b610353600480360361034e91908101906126a4565b610a1d565b6040516103609190613322565b60405180910390f35b610383600480360361037e91908101906126a4565b610a6d565b005b61039f600480360361039a91908101906127d3565b610ab0565b005b6103bb60048036036103b69190810190612758565b610be6565b005b6103c5610c0c565b6040516103d291906131d5565b60405180910390f35b6103f560048036036103f09190810190612b58565b610cae565b60405161040291906131d5565b60405180910390f35b6104256004803603610420919081019061284b565b610d75565b60405161043291906131ba565b60405180910390f35b610455600480360361045091908101906126cd565b610dee565b60405161046291906131ba565b60405180910390f35b610485600480360361048091908101906128b2565b610e82565b60405161049291906131ba565b60405180910390f35b6104b560048036036104b091908101906126a4565b6110aa565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105b557600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e906132b7565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600980549050905090565b61071f33826111b4565b61072857600080fd5b610733838383611249565b505050565b610777828260006040519080825280601f01601f1916602001820160405280156107715781602001600182028038833980820191505090505b506107ee565b5050565b600061078683610a1d565b821061079157600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106107db57fe5b9060005260206000200154905092915050565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084c57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516108969190613153565b60405180910390a1565b6108bb83838360405180602001604052806000815250610be6565b505050565b60006108ca610708565b82106108d557600080fd5b600982815481106108e257fe5b90600052602060002001549050919050565b816015600085815260200190815260200160002060000181905550806015600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d828260405161099592919061333d565b60405180910390a1505050565b8585601091906109b39291906121ed565b508383601191906109c59291906121ed565b508181601291906109d79291906121ed565b50505050505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a66600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061126d565b9050919050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ae957600080fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bda91906131ba565b60405180910390a35050565b610bf1848484610715565b610bfd8484848461127b565b610c0657600080fd5b50505050565b606060128054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ca45780601f10610c7957610100808354040283529160200191610ca4565b820191906000526020600020905b815481529060010190602001808311610c8757829003601f168201915b5050505050905090565b6060610cb982611392565b610cc257600080fd5b601360008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d695780601f10610d3e57610100808354040283529160200191610d69565b820191906000526020600020905b815481529060010190602001808311610d4c57829003601f168201915b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dd057600080fd5b610dda8484611404565b610de383611425565b600190509392505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610ee19291906132f7565b60206040518083038186803b158015610ef957600080fd5b505afa158015610f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f319190810190612917565b610f70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6790613237565b60405180910390fd5b600083600001516000015184600001516020015185602001516000015186602001516020015187604001516000015188604001516020015188604051602001610fbf97969594939291906130b7565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461107c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611073906132d7565b60405180910390fd5b6110878186886108f4565b6060611091610c0c565b905061109e878783610d75565b92505050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461110357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116890613217565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806111c0836109e0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061122f57508373ffffffffffffffffffffffffffffffffffffffff166112178461051f565b73ffffffffffffffffffffffffffffffffffffffff16145b80611240575061123f8185610dee565b5b91505092915050565b611254838383611543565b61125e8382611770565b611268828261190e565b505050565b600081600001549050919050565b600061129c8473ffffffffffffffffffffffffffffffffffffffff166119d5565b6112a9576001905061138a565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016112ea949392919061316e565b602060405180830381600087803b15801561130457600080fd5b505af1158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061133c9190810190612a8b565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b61140e8282611a20565b611418828261190e565b61142181611bd2565b5050565b61142e81611392565b61146d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146490613297565b60405180910390fd5b61151960128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115065780601f106114db57610100808354040283529160200191611506565b820191906000526020600020905b8154815290600101906020018083116114e957829003601f168201915b505050505061151483611c1e565b611d4b565b60136000838152602001908152602001600020908051906020019061153f92919061226d565b5050565b8273ffffffffffffffffffffffffffffffffffffffff16611563826109e0565b73ffffffffffffffffffffffffffffffffffffffff16146115b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b090613257565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161e90613217565b60405180910390fd5b61163081611d8f565b611677600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e4d565b6116be600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e70565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006117c86001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611e8690919063ffffffff16565b90506000600860008481526020019081526020016000205490508181146118b5576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061183557fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061188d57fe5b9060005260206000200181905550816008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361190791906122ed565b5050505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506008600083815260200190815260200160002081905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611a1757506000801b8214155b92505050919050565b611a2981611392565b15611a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6090613277565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ad9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad0906131f7565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b72600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e70565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611c66576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611d46565b600082905060005b60008214611c90578080600101915050600a8281611c8857fe5b049150611c6e565b6060816040519080825280601f01601f191660200182016040528015611cc55781602001600182028038833980820191505090505b50905060006001830390505b60008614611d3e57600a8681611ce357fe5b0660300160f81b82828060019003935081518110611cfd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611d3657fe5b049550611cd1565b819450505050505b919050565b6060611d878383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250611ed0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e4a5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611e6560018260000154611e8690919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000611ec883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612192565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015611f2c5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015611fb157888181518110611f5857fe5b602001015160f81c60f81b838380600101945081518110611f7557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050611f43565b600090505b875181101561202457878181518110611fcb57fe5b602001015160f81c60f81b838380600101945081518110611fe857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050611fb6565b600090505b86518110156120975786818151811061203e57fe5b602001015160f81c60f81b83838060010194508151811061205b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612029565b600090505b855181101561210a578581815181106120b157fe5b602001015160f81c60f81b8383806001019450815181106120ce57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061209c565b600090505b845181101561217d5784818151811061212457fe5b602001015160f81c60f81b83838060010194508151811061214157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061210f565b82995050505050505050505095945050505050565b60008383111582906121da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d191906131d5565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061222e57803560ff191683800117855561225c565b8280016001018555821561225c579182015b8281111561225b578235825591602001919060010190612240565b5b5090506122699190612319565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106122ae57805160ff19168380011785556122dc565b828001600101855582156122dc579182015b828111156122db5782518255916020019190600101906122c0565b5b5090506122e99190612319565b5090565b815481835581811115612314578183600052602060002091820191016123139190612319565b5b505050565b61233b91905b8082111561233757600081600090555060010161231f565b5090565b90565b60008135905061234d816135dd565b92915050565b600082601f83011261236457600080fd5b600261237761237282613393565b613366565b9150818385602084028201111561238d57600080fd5b60005b838110156123bd57816123a3888261268f565b845260208401935060208301925050600181019050612390565b5050505092915050565b600082601f8301126123d857600080fd5b60026123eb6123e6826133b5565b613366565b9150818385602084028201111561240157600080fd5b60005b838110156124315781612417888261268f565b845260208401935060208301925050600181019050612404565b5050505092915050565b60008135905061244a816135f4565b92915050565b60008151905061245f816135f4565b92915050565b6000813590506124748161360b565b92915050565b60008135905061248981613622565b92915050565b60008151905061249e81613622565b92915050565b600082601f8301126124b557600080fd5b81356124c86124c3826133d7565b613366565b915080825260208301602083018583830111156124e457600080fd5b6124ef838284613580565b50505092915050565b60008083601f84011261250a57600080fd5b8235905067ffffffffffffffff81111561252357600080fd5b60208301915083600182028301111561253b57600080fd5b9250929050565b600082601f83011261255357600080fd5b813561256661256182613403565b613366565b9150808252602083016020830185838301111561258257600080fd5b61258d838284613580565b50505092915050565b6000604082840312156125a857600080fd5b6125b26040613366565b905060006125c28482850161268f565b60008301525060206125d68482850161268f565b60208301525092915050565b6000608082840312156125f457600080fd5b6125fe6040613366565b9050600061260e84828501612353565b600083015250604061262284828501612353565b60208301525092915050565b6000610100828403121561264157600080fd5b61264b6060613366565b9050600061265b84828501612596565b600083015250604061266f848285016125e2565b60208301525060c061268384828501612596565b60408301525092915050565b60008135905061269e81613639565b92915050565b6000602082840312156126b657600080fd5b60006126c48482850161233e565b91505092915050565b600080604083850312156126e057600080fd5b60006126ee8582860161233e565b92505060206126ff8582860161233e565b9150509250929050565b60008060006060848603121561271e57600080fd5b600061272c8682870161233e565b935050602061273d8682870161233e565b925050604061274e8682870161268f565b9150509250925092565b6000806000806080858703121561276e57600080fd5b600061277c8782880161233e565b945050602061278d8782880161233e565b935050604061279e8782880161268f565b925050606085013567ffffffffffffffff8111156127bb57600080fd5b6127c7878288016124a4565b91505092959194509250565b600080604083850312156127e657600080fd5b60006127f48582860161233e565b92505060206128058582860161243b565b9150509250929050565b6000806040838503121561282257600080fd5b60006128308582860161233e565b92505060206128418582860161268f565b9150509250929050565b60008060006060848603121561286057600080fd5b600061286e8682870161233e565b935050602061287f8682870161268f565b925050604084013567ffffffffffffffff81111561289c57600080fd5b6128a886828701612542565b9150509250925092565b60008060008061018085870312156128c957600080fd5b60006128d78782880161233e565b94505060206128e88782880161268f565b93505060406128f98782880161262e565b92505061014061290b878288016123c7565b91505092959194509250565b60006020828403121561292957600080fd5b600061293784828501612450565b91505092915050565b6000806040838503121561295357600080fd5b600061296185828601612465565b925050602083013567ffffffffffffffff81111561297e57600080fd5b61298a85828601612542565b9150509250929050565b6000806000606084860312156129a957600080fd5b60006129b786828701612465565b935050602084013567ffffffffffffffff8111156129d457600080fd5b6129e086828701612542565b925050604084013567ffffffffffffffff8111156129fd57600080fd5b612a09868287016124a4565b9150509250925092565b600080600060608486031215612a2857600080fd5b6000612a3686828701612465565b9350506020612a478682870161268f565b9250506040612a588682870161233e565b9150509250925092565b600060208284031215612a7457600080fd5b6000612a828482850161247a565b91505092915050565b600060208284031215612a9d57600080fd5b6000612aab8482850161248f565b91505092915050565b60008060008060008060608789031215612acd57600080fd5b600087013567ffffffffffffffff811115612ae757600080fd5b612af389828a016124f8565b9650965050602087013567ffffffffffffffff811115612b1257600080fd5b612b1e89828a016124f8565b9450945050604087013567ffffffffffffffff811115612b3d57600080fd5b612b4989828a016124f8565b92509250509295509295509295565b600060208284031215612b6a57600080fd5b6000612b788482850161268f565b91505092915050565b6000612b8d8383613073565b60208301905092915050565b6000612ba58383613091565b60208301905092915050565b612bba8161354a565b82525050565b612bc9816134cc565b82525050565b612bd88161344e565b612be28184613494565b9250612bed82613439565b8060005b83811015612c1e578151612c058782612b81565b9650612c108361347c565b925050600181019050612bf1565b505050505050565b612c2f8161344e565b612c39818461349f565b9250612c4482613439565b8060005b83811015612c75578151612c5c8782612b99565b9650612c678361347c565b925050600181019050612c48565b505050505050565b612c8681613443565b612c908184613489565b9250612c9b8261342f565b8060005b83811015612ccc578151612cb38782612b81565b9650612cbe8361346f565b925050600181019050612c9f565b505050505050565b612cdd81613443565b612ce7818461349f565b9250612cf28261342f565b8060005b83811015612d23578151612d0a8782612b99565b9650612d158361346f565b925050600181019050612cf6565b505050505050565b612d34816134de565b82525050565b6000612d4582613459565b612d4f81856134aa565b9350612d5f81856020860161358f565b612d68816135cc565b840191505092915050565b6000612d7e82613464565b612d8881856134bb565b9350612d9881856020860161358f565b612da1816135cc565b840191505092915050565b6000612db96014836134bb565b91507f41646472657373206973206e6f742076616c69640000000000000000000000006000830152602082019050919050565b6000612df9600f836134bb565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b6000612e396011836134bb565b91507f4e6f7420612076616c69642070726f6f660000000000000000000000000000006000830152602082019050919050565b6000612e79601a836134bb565b91507f4e6f742061206f776e6572206f6620676976656e20746f6b656e0000000000006000830152602082019050919050565b6000612eb96014836134bb565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000612ef96014836134bb565b91507f546f6b656e20646f6573206e6f742065786973740000000000000000000000006000830152602082019050919050565b6000612f396030836134bb565b91507f4a75737420612067656e746c652072656d696e64657220796f7520617265206160008301527f6c726561647920746865206f776e6572000000000000000000000000000000006020830152604082019050919050565b6000612f9f6017836134bb565b91507f536f6c7574696f6e20616c7265616479206578697374730000000000000000006000830152602082019050919050565b604082016000820151612fe86000850182613073565b506020820151612ffb6020850182613073565b50505050565b6080820160008201516130176000850182612c7d565b50602082015161302a6040850182612c7d565b50505050565b610100820160008201516130476000850182612fd2565b50602082015161305a6040850182613001565b50604082015161306d60c0850182612fd2565b50505050565b61307c81613540565b82525050565b61308b81613540565b82525050565b61309a81613540565b82525050565b6130b16130ac82613540565b6135c2565b82525050565b60006130c3828a6130a0565b6020820191506130d382896130a0565b6020820191506130e38288612cd4565b6040820191506130f38287612cd4565b60408201915061310382866130a0565b60208201915061311382856130a0565b6020820191506131238284612c26565b60408201915081905098975050505050505050565b600060208201905061314d6000830184612bc0565b92915050565b60006020820190506131686000830184612bb1565b92915050565b60006080820190506131836000830187612bb1565b6131906020830186612bc0565b61319d6040830185613082565b81810360608301526131af8184612d3a565b905095945050505050565b60006020820190506131cf6000830184612d2b565b92915050565b600060208201905081810360008301526131ef8184612d73565b905092915050565b6000602082019050818103600083015261321081612dac565b9050919050565b6000602082019050818103600083015261323081612dec565b9050919050565b6000602082019050818103600083015261325081612e2c565b9050919050565b6000602082019050818103600083015261327081612e6c565b9050919050565b6000602082019050818103600083015261329081612eac565b9050919050565b600060208201905081810360008301526132b081612eec565b9050919050565b600060208201905081810360008301526132d081612f2c565b9050919050565b600060208201905081810360008301526132f081612f92565b9050919050565b60006101408201905061330d6000830185613030565b61331b610100830184612bcf565b9392505050565b60006020820190506133376000830184613082565b92915050565b60006040820190506133526000830185613082565b61335f6020830184612bc0565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561338957600080fd5b8060405250919050565b600067ffffffffffffffff8211156133aa57600080fd5b602082029050919050565b600067ffffffffffffffff8211156133cc57600080fd5b602082029050919050565b600067ffffffffffffffff8211156133ee57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561341a57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006134d782613520565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006135558261355c565b9050919050565b60006135678261356e565b9050919050565b600061357982613520565b9050919050565b82818337600083830152505050565b60005b838110156135ad578082015181840152602081019050613592565b838111156135bc576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b6135e6816134cc565b81146135f157600080fd5b50565b6135fd816134de565b811461360857600080fd5b50565b613614816134ea565b811461361f57600080fd5b50565b61362b816134f4565b811461363657600080fd5b50565b61364281613540565b811461364d57600080fd5b5056fea365627a7a72315820a78a3f3bcf1009e9f0ce290565b82009a97c8a2abe4ab455bbad19e96198fe856c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "335:1637:3:-;;;475:70;8:9:-1;5:2;;;30:1;27;20:12;5:2;475:70:3;;;;;;;;;;;;;;;;;;;;;;;;20139:282:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;981:10;974:6;;:17;;;;;;;;;;;;;;;;;;1006:21;1016:10;1006:21;;;;;;;;;;;;;;;2212:5;2204:7;;:13;;;;;;;;;;;;;;;;;;2232:20;2241:10;2232:20;;;;;;;;;;;;;;;2836:40;2433:10;2855:20;;2836:18;;;:40;;:::i;:::-;5018;4892:10;5037:20;;5018:18;;;:40;;:::i;:::-;12650:51;12256:10;12669:31;;12650:18;;;:51;;:::i;:::-;20287:4;20280:5;:11;;;;;;;;;;;;:::i;:::-;;20311:6;20301:7;:16;;;;;;;;;;;;:::i;:::-;;20343:12;20327:13;:28;;;;;;;;;;;;:::i;:::-;;20365:49;19950:10;20384:29;;20365:18;;;:49;;:::i;:::-;20139:282;;;532:5:3;519:1;;:19;;;;;;;;;;;;;;;;;;475:70;335:1637;;3186:158:0;3276:10;3261:25;;:11;:25;;;;;3253:34;;;;;;3333:4;3297:20;:33;3318:11;3297:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3186:158;:::o;335:1637:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;416:142;507:45;546:5;507:45;;;502:3;495:58;489:69;;;565:229;;691:2;680:9;676:18;668:26;;705:79;781:1;770:9;766:17;757:6;705:79;;;662:132;;;;;801:91;;863:24;881:5;863:24;;;852:35;;846:46;;;;899:121;;972:42;965:5;961:54;950:65;;944:76;;;;1027:129;;1114:37;1145:5;1114:37;;;1101:50;;1095:61;;;;1163:121;;1242:37;1273:5;1242:37;;;1229:50;;1223:61;;;;1291:108;;1370:24;1388:5;1370:24;;;1357:37;;1351:48;;;;1406:117;1475:24;1493:5;1475:24;;;1468:5;1465:35;1455:2;;1514:1;1511;1504:12;1455:2;1449:74;;335:1637:3;;;;;;;",
  "deployedSourceMap": "335:1637:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;335:1637:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2974:133:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6250:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5666:578;;;;;;;;;;;;;;;;:::i;:::-;;13415:94;;;:::i;:::-;;;;;;;;;;;;;;;;7394:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;;;;;;;;;;;:::i;:::-;;13081:182:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:2;;;;;;;;;;;;;;;;:::i;:::-;;2264:97:0;;;:::i;:::-;;7580:132;;;;;;;;;;;;;;;;:::i;:::-;;13846:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;980:160:3;;;;;;;;;;;;;;;;:::i;:::-;;20612:196:0;;;;;;;;;;;;;;;;:::i;:::-;;5431:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5074:351;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1039:82;;;;;;;;;;;;;;;;:::i;:::-;;6709:213;;;;;;;;;;;;;;;;:::i;:::-;;7718:211;;;;;;;;;;;;;;;;:::i;:::-;;20427:98;;;:::i;:::-;;;;;;;;;;;;;;;;20813:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;22419:232;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7243:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1361:609:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1126:298:0;;;;;;;;;;;;;;;;:::i;:::-;;2974:133;3044:4;3067:20;:33;3088:11;3067:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3060:40;;2974:133;;;:::o;6250:167::-;6309:7;6386:15;:24;6402:7;6386:24;;;;;;;;;;;;;;;;;;;;;6379:31;;6250:167;;;:::o;5666:578::-;873:6;;;;;;;;;;;861:18;;:10;:18;;;853:27;;;;;;5854:2;5832:24;;:11;:20;5844:7;5832:20;;;;;;;;;;;;;;;;;;;;;:24;;;;5824:84;;;;;;;;;;;;;;;;;;;;;;6152:2;6127:15;:24;6143:7;6127:24;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;6228:7;6225:2;6205:31;;6214:10;6205:31;;;;;;;;;;;;5666:578;;:::o;13415:94::-;13459:7;13485:10;:17;;;;13478:24;;13415:94;:::o;7394:180::-;7484:39;7503:10;7515:7;7484:18;:39::i;:::-;7476:48;;;;;;7535:32;7549:4;7555:2;7559:7;7535:13;:32::i;:::-;7394:180;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;13081:182:0:-;13161:7;13196:16;13206:5;13196:9;:16::i;:::-;13188:5;:24;13180:33;;;;;;13230:12;:19;13243:5;13230:19;;;;;;;;;;;;;;;13250:5;13230:26;;;;;;;;;;;;;;;;13223:33;;13081:182;;;;:::o;14929:166:2:-;;;;:::o;2264:97:0:-;873:6;;;;;;;;;;;861:18;;:10;:18;;;853:27;;;;;;2317:4;2309:7;;:12;;;;;;;;;;;;;;;;;;2336:18;2343:10;2336:18;;;;;;;;;;;;;;;2264:97::o;7580:132::-;7666:39;7683:4;7689:2;7693:7;7666:39;;;;;;;;;;;;:16;:39::i;:::-;7580:132;;;:::o;13846:148::-;13904:7;13939:13;:11;:13::i;:::-;13931:5;:21;13923:30;;;;;;13970:10;13981:5;13970:17;;;;;;;;;;;;;;;;13963:24;;13846:148;;;:::o;980:160:3:-;1072:3;1052:9;:16;1062:5;1052:16;;;;;;;;;;;:19;;:23;;;;1101:3;1081:9;:16;1091:5;1081:16;;;;;;;;;;;:19;;;:23;;;;;;;;;;;;;;;;;;1115:22;1129:3;1133;1115:22;;;;;;;;;;;;;;;;980:160;;;:::o;20612:196:0:-;20737:4;;20731:5;:10;;;;;;;:::i;:::-;;20759:6;;20751:7;:14;;;;;;;:::i;:::-;;20789:12;;20775:13;:26;;;;;;;:::i;:::-;;20612:196;;;;;;:::o;5431:162::-;5486:7;5566:11;:20;5578:7;5566:20;;;;;;;;;;;;;;;;;;;;;5559:27;;5431:162;;;:::o;5074:351::-;5129:7;5381:34;:17;:24;5399:5;5381:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5374:41;;5074:351;;;:::o;1039:82::-;1105:5;1098:6;;:12;;;;;;;;;;;;;;;;;;1039:82;:::o;6709:213::-;6794:10;6788:16;;:2;:16;;;;6780:25;;;;;;6852:8;6815:18;:30;6834:10;6815:30;;;;;;;;;;;;;;;:34;6846:2;6815:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;6902:2;6875:40;;6890:10;6875:40;;;6906:8;6875:40;;;;;;;;;;;;;;;6709:213;;:::o;7718:211::-;7824:31;7837:4;7843:2;7847:7;7824:12;:31::i;:::-;7873:48;7896:4;7902:2;7906:7;7915:5;7873:22;:48::i;:::-;7865:57;;;;;;7718:211;;;;:::o;20427:98::-;20474:13;20505;20498:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20427:98;:::o;20813:151::-;20871:13;20904:16;20912:7;20904;:16::i;:::-;20896:25;;;;;;20938:10;:19;20949:7;20938:19;;;;;;;;;;;20931:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20813:151;;;:::o;22419:232::-;22509:4;873:6;;;;;;;;;;;861:18;;:10;:18;;;853:27;;;;;;22541:23;22553:2;22556:7;22541:11;:23::i;:::-;22582:29;22603:7;22582:20;:29::i;:::-;22636:4;22629:11;;22419:232;;;;;:::o;7243:145::-;7323:4;7346:18;:25;7365:5;7346:25;;;;;;;;;;;;;;;:35;7372:8;7346:35;;;;;;;;;;;;;;;;;;;;;;;;;7339:42;;7243:145;;;;:::o;1361:609:3:-;1478:4;1507:1;;;;;;;;;;;:10;;;1518:5;1524;1507:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1507:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1507:23:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1507:23:3;;;;;;;;;1499:52;;;;;;;;;;;;;;;;;;;;;;1563:11;1604:5;:7;;;:9;;;1615:5;:7;;;:9;;;1626:5;:7;;;:9;;;1637:5;:7;;;:9;;;1648:5;:7;;;:9;;;1659:5;:7;;;:9;;;1670:5;1587:89;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1587:89:3;;;1577:100;;;;;;1563:114;;1733:3;1704:33;;:9;:14;1714:3;1704:14;;;;;;;;;;;:17;;;;;;;;;;;;:33;;;1696:69;;;;;;;;;;;;;;;;;;;;;;1784:32;1796:3;1801:5;1808:7;1784:11;:32::i;:::-;1835:26;1864:23;:21;:23::i;:::-;1835:52;;1913:40;1924:7;1933:5;1940:12;1913:10;:40::i;:::-;1906:47;;;;1361:609;;;;;;:::o;1126:298:0:-;873:6;;;;;;;;;;;861:18;;:10;:18;;;853:27;;;;;;1364:8;1344:29;;:8;:29;;;1336:56;;;;;;;;;;;;;;;;;;;;;;1409:8;1402:6;;:15;;;;;;;;;;;;;;;;;;1126:298;:::o;8635:246::-;8720:4;8736:13;8752:16;8760:7;8752;:16::i;:::-;8736:32;;8797:5;8786:16;;:7;:16;;;:51;;;;8830:7;8806:31;;:20;8818:7;8806:11;:20::i;:::-;:31;;;8786:51;:87;;;;8841:32;8858:5;8865:7;8841:16;:32::i;:::-;8786:87;8778:96;;;8635:246;;;;:::o;14369:239::-;14454:38;14474:4;14480:2;14484:7;14454:19;:38::i;:::-;14503:47;14536:4;14542:7;14503:32;:47::i;:::-;14561:40;14589:2;14593:7;14561:27;:40::i;:::-;14369:239;;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11101:347:0:-;11222:4;11247:15;:2;:13;;;:15::i;:::-;11242:58;;11285:4;11278:11;;;;11242:58;11310:13;11342:2;11326:36;;;11363:10;11375:4;11381:7;11390:5;11326:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11326:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11326:70:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11326:70:0;;;;;;;;;11310:86;;3989:10;11424:16;;11414:26;;;:6;:26;;;;11406:35;;;11101:347;;;;;;;:::o;8123:152::-;8180:4;8196:13;8212:11;:20;8224:7;8212:20;;;;;;;;;;;;;;;;;;;;;8196:36;;8266:1;8249:19;;:5;:19;;;;8242:26;;;8123:152;;;:::o;14863:196::-;14926:24;14938:2;14942:7;14926:11;:24::i;:::-;14961:40;14989:2;14993:7;14961:27;:40::i;:::-;15012;15044:7;15012:31;:40::i;:::-;14863:196;;:::o;21441:219::-;21513:16;21521:7;21513;:16::i;:::-;21505:48;;;;;;;;;;;;;;;;;;;;;;21583:70;21607:13;21583:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21621:31;21644:7;21621:22;:31::i;:::-;21583:23;:70::i;:::-;21563:10;:19;21574:7;21563:19;;;;;;;;;;;:90;;;;;;;;;;;;:::i;:::-;;21441:219;:::o;9832:741::-;10014:4;9996:22;;:16;10004:7;9996;:16::i;:::-;:22;;;9988:60;;;;;;;;;;;;;;;;;;;;;;10146:2;10134:15;;:2;:15;;;10126:42;;;;;;;;;;;;;;;;;;;;;;10211:23;10226:7;10211:14;:23::i;:::-;10368:35;:17;:23;10386:4;10368:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10422:33;:17;:21;10440:2;10422:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10486:2;10465:11;:20;10477:7;10465:20;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;10558:7;10554:2;10539:27;;10548:4;10539:27;;;;;;;;;;;;9832:741;;;:::o;16835:1128::-;17097:22;17122:32;17152:1;17122:12;:18;17135:4;17122:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17097:57;;17164:18;17185:17;:26;17203:7;17185:26;;;;;;;;;;;;17164:47;;17329:14;17315:10;:28;17311:323;;17359:19;17381:12;:18;17394:4;17381:18;;;;;;;;;;;;;;;17400:14;17381:34;;;;;;;;;;;;;;;;17359:56;;17463:11;17430:12;:18;17443:4;17430:18;;;;;;;;;;;;;;;17449:10;17430:30;;;;;;;;;;;;;;;:44;;;;17579:10;17546:17;:30;17564:11;17546:30;;;;;;;;;;;:43;;;;17311:323;;17720:12;:18;17733:4;17720:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16835:1128;;;;:::o;15681:183::-;15794:12;:16;15807:2;15794:16;;;;;;;;;;;;;;;:23;;;;15765:17;:26;15783:7;15765:26;;;;;;;;;;;:52;;;;15827:12;:16;15840:2;15827:16;;;;;;;;;;;;;;;15849:7;15827:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15827:30:0;;;;;;;;;;;;;;;;;;;;;;15681:183;;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;9038:595:0:-;9357:16;9365:7;9357;:16::i;:::-;9356:17;9348:50;;;;;;;;;;;;;;;;;;;;;;9430:1;9416:16;;:2;:16;;;;9408:49;;;;;;;;;;;;;;;;;;;;;;9488:2;9467:11;:20;9479:7;9467:20;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;9509:33;:17;:21;9527:2;9509:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9582:7;9578:2;9557:33;;9574:1;9557:33;;;;;;;;;;;;9038:595;;:::o;16059:161::-;16162:10;:17;;;;16135:15;:24;16151:7;16135:24;;;;;;;;;;;:44;;;;16189:10;16205:7;16189:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16189:24:0;;;;;;;;;;;;;;;;;;;;;;16059:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;11529:171:0:-;11628:1;11592:38;;:15;:24;11608:7;11592:24;;;;;;;;;;;;;;;;;;;;;:38;;;11588:106;;11681:1;11646:15;:24;11662:7;11646:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11588:106;11529:171;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;335:1637:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:608;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:4;333:74;348:58;399:6;348:58;;;333:74;;;324:83;;424:5;483:6;530:3;522:4;514:6;510:17;505:3;501:27;498:36;495:2;;;547:1;544;537:12;495:2;572:1;557:206;582:6;579:1;576:13;557:206;;;640:3;662:37;695:3;683:10;662:37;;;657:3;650:50;723:4;718:3;714:14;707:21;;751:4;746:3;742:14;735:21;;614:149;604:1;601;597:9;592:14;;557:206;;;561:14;232:537;;;;;;;;796:616;;911:3;904:4;896:6;892:17;888:27;878:2;;929:1;926;919:12;878:2;953:4;972:78;987:62;1042:6;987:62;;;972:78;;;963:87;;1067:5;1126:6;1173:3;1165:4;1157:6;1153:17;1148:3;1144:27;1141:36;1138:2;;;1190:1;1187;1180:12;1138:2;1215:1;1200:206;1225:6;1222:1;1219:13;1200:206;;;1283:3;1305:37;1338:3;1326:10;1305:37;;;1300:3;1293:50;1366:4;1361:3;1357:14;1350:21;;1394:4;1389:3;1385:14;1378:21;;1257:149;1247:1;1244;1240:9;1235:14;;1200:206;;;1204:14;871:541;;;;;;;;1420:124;;1497:6;1484:20;1475:29;;1509:30;1533:5;1509:30;;;1469:75;;;;;1551:128;;1632:6;1626:13;1617:22;;1644:30;1668:5;1644:30;;;1611:68;;;;;1686:130;;1766:6;1753:20;1744:29;;1778:33;1805:5;1778:33;;;1738:78;;;;;1823:128;;1902:6;1889:20;1880:29;;1914:32;1940:5;1914:32;;;1874:77;;;;;1958:132;;2041:6;2035:13;2026:22;;2053:32;2079:5;2053:32;;;2020:70;;;;;2098:440;;2199:3;2192:4;2184:6;2180:17;2176:27;2166:2;;2217:1;2214;2207:12;2166:2;2254:6;2241:20;2276:64;2291:48;2332:6;2291:48;;;2276:64;;;2267:73;;2360:6;2353:5;2346:21;2396:4;2388:6;2384:17;2429:4;2422:5;2418:16;2464:3;2455:6;2450:3;2446:16;2443:25;2440:2;;;2481:1;2478;2471:12;2440:2;2491:41;2525:6;2520:3;2515;2491:41;;;2159:379;;;;;;;;2561:337;;;2676:3;2669:4;2661:6;2657:17;2653:27;2643:2;;2694:1;2691;2684:12;2643:2;2727:6;2714:20;2704:30;;2754:18;2746:6;2743:30;2740:2;;;2786:1;2783;2776:12;2740:2;2820:4;2812:6;2808:17;2796:29;;2871:3;2863:4;2855:6;2851:17;2841:8;2837:32;2834:41;2831:2;;;2888:1;2885;2878:12;2831:2;2636:262;;;;;;2907:442;;3009:3;3002:4;2994:6;2990:17;2986:27;2976:2;;3027:1;3024;3017:12;2976:2;3064:6;3051:20;3086:65;3101:49;3143:6;3101:49;;;3086:65;;;3077:74;;3171:6;3164:5;3157:21;3207:4;3199:6;3195:17;3240:4;3233:5;3229:16;3275:3;3266:6;3261:3;3257:16;3254:25;3251:2;;;3292:1;3289;3282:12;3251:2;3302:41;3336:6;3331:3;3326;3302:41;;;2969:380;;;;;;;;3386:457;;3496:4;3484:9;3479:3;3475:19;3471:30;3468:2;;;3514:1;3511;3504:12;3468:2;3532:20;3547:4;3532:20;;;3523:29;;3599:1;3631:49;3676:3;3667:6;3656:9;3652:22;3631:49;;;3624:4;3617:5;3613:16;3606:75;3562:130;3739:2;3772:49;3817:3;3808:6;3797:9;3793:22;3772:49;;;3765:4;3758:5;3754:16;3747:75;3702:131;3462:381;;;;;3879:495;;3989:4;3977:9;3972:3;3968:19;3964:30;3961:2;;;4007:1;4004;3997:12;3961:2;4025:20;4040:4;4025:20;;;4016:29;;4092:1;4124:68;4188:3;4179:6;4168:9;4164:22;4124:68;;;4117:4;4110:5;4106:16;4099:94;4055:149;4251:2;4284:68;4348:3;4339:6;4328:9;4324:22;4284:68;;;4277:4;4270:5;4266:16;4259:94;4214:150;3955:419;;;;;4409:666;;4521:6;4509:9;4504:3;4500:19;4496:32;4493:2;;;4541:1;4538;4531:12;4493:2;4559:20;4574:4;4559:20;;;4550:29;;4626:1;4658:70;4724:3;4715:6;4704:9;4700:22;4658:70;;;4651:4;4644:5;4640:16;4633:96;4589:151;4787:2;4820:70;4886:3;4877:6;4866:9;4862:22;4820:70;;;4813:4;4806:5;4802:16;4795:96;4750:152;4949:3;4983:70;5049:3;5040:6;5029:9;5025:22;4983:70;;;4976:4;4969:5;4965:16;4958:96;4912:153;4487:588;;;;;5082:130;;5162:6;5149:20;5140:29;;5174:33;5201:5;5174:33;;;5134:78;;;;;5219:241;;5323:2;5311:9;5302:7;5298:23;5294:32;5291:2;;;5339:1;5336;5329:12;5291:2;5374:1;5391:53;5436:7;5427:6;5416:9;5412:22;5391:53;;;5381:63;;5353:97;5285:175;;;;;5467:366;;;5588:2;5576:9;5567:7;5563:23;5559:32;5556:2;;;5604:1;5601;5594:12;5556:2;5639:1;5656:53;5701:7;5692:6;5681:9;5677:22;5656:53;;;5646:63;;5618:97;5746:2;5764:53;5809:7;5800:6;5789:9;5785:22;5764:53;;;5754:63;;5725:98;5550:283;;;;;;5840:491;;;;5978:2;5966:9;5957:7;5953:23;5949:32;5946:2;;;5994:1;5991;5984:12;5946:2;6029:1;6046:53;6091:7;6082:6;6071:9;6067:22;6046:53;;;6036:63;;6008:97;6136:2;6154:53;6199:7;6190:6;6179:9;6175:22;6154:53;;;6144:63;;6115:98;6244:2;6262:53;6307:7;6298:6;6287:9;6283:22;6262:53;;;6252:63;;6223:98;5940:391;;;;;;6338:721;;;;;6502:3;6490:9;6481:7;6477:23;6473:33;6470:2;;;6519:1;6516;6509:12;6470:2;6554:1;6571:53;6616:7;6607:6;6596:9;6592:22;6571:53;;;6561:63;;6533:97;6661:2;6679:53;6724:7;6715:6;6704:9;6700:22;6679:53;;;6669:63;;6640:98;6769:2;6787:53;6832:7;6823:6;6812:9;6808:22;6787:53;;;6777:63;;6748:98;6905:2;6894:9;6890:18;6877:32;6929:18;6921:6;6918:30;6915:2;;;6961:1;6958;6951:12;6915:2;6981:62;7035:7;7026:6;7015:9;7011:22;6981:62;;;6971:72;;6856:193;6464:595;;;;;;;;7066:360;;;7184:2;7172:9;7163:7;7159:23;7155:32;7152:2;;;7200:1;7197;7190:12;7152:2;7235:1;7252:53;7297:7;7288:6;7277:9;7273:22;7252:53;;;7242:63;;7214:97;7342:2;7360:50;7402:7;7393:6;7382:9;7378:22;7360:50;;;7350:60;;7321:95;7146:280;;;;;;7433:366;;;7554:2;7542:9;7533:7;7529:23;7525:32;7522:2;;;7570:1;7567;7560:12;7522:2;7605:1;7622:53;7667:7;7658:6;7647:9;7643:22;7622:53;;;7612:63;;7584:97;7712:2;7730:53;7775:7;7766:6;7755:9;7751:22;7730:53;;;7720:63;;7691:98;7516:283;;;;;;7806:597;;;;7954:2;7942:9;7933:7;7929:23;7925:32;7922:2;;;7970:1;7967;7960:12;7922:2;8005:1;8022:53;8067:7;8058:6;8047:9;8043:22;8022:53;;;8012:63;;7984:97;8112:2;8130:53;8175:7;8166:6;8155:9;8151:22;8130:53;;;8120:63;;8091:98;8248:2;8237:9;8233:18;8220:32;8272:18;8264:6;8261:30;8258:2;;;8304:1;8301;8294:12;8258:2;8324:63;8379:7;8370:6;8359:9;8355:22;8324:63;;;8314:73;;8199:194;7916:487;;;;;;8410:710;;;;;8611:3;8599:9;8590:7;8586:23;8582:33;8579:2;;;8628:1;8625;8618:12;8579:2;8663:1;8680:53;8725:7;8716:6;8705:9;8701:22;8680:53;;;8670:63;;8642:97;8770:2;8788:53;8833:7;8824:6;8813:9;8809:22;8788:53;;;8778:63;;8749:98;8878:2;8896:76;8964:7;8955:6;8944:9;8940:22;8896:76;;;8886:86;;8857:121;9009:3;9028:76;9096:7;9087:6;9076:9;9072:22;9028:76;;;9018:86;;8988:122;8573:547;;;;;;;;9127:257;;9239:2;9227:9;9218:7;9214:23;9210:32;9207:2;;;9255:1;9252;9245:12;9207:2;9290:1;9307:61;9360:7;9351:6;9340:9;9336:22;9307:61;;;9297:71;;9269:105;9201:183;;;;;9391:472;;;9522:2;9510:9;9501:7;9497:23;9493:32;9490:2;;;9538:1;9535;9528:12;9490:2;9573:1;9590:53;9635:7;9626:6;9615:9;9611:22;9590:53;;;9580:63;;9552:97;9708:2;9697:9;9693:18;9680:32;9732:18;9724:6;9721:30;9718:2;;;9764:1;9761;9754:12;9718:2;9784:63;9839:7;9830:6;9819:9;9815:22;9784:63;;;9774:73;;9659:194;9484:379;;;;;;9870:701;;;;10027:2;10015:9;10006:7;10002:23;9998:32;9995:2;;;10043:1;10040;10033:12;9995:2;10078:1;10095:53;10140:7;10131:6;10120:9;10116:22;10095:53;;;10085:63;;10057:97;10213:2;10202:9;10198:18;10185:32;10237:18;10229:6;10226:30;10223:2;;;10269:1;10266;10259:12;10223:2;10289:63;10344:7;10335:6;10324:9;10320:22;10289:63;;;10279:73;;10164:194;10417:2;10406:9;10402:18;10389:32;10441:18;10433:6;10430:30;10427:2;;;10473:1;10470;10463:12;10427:2;10493:62;10547:7;10538:6;10527:9;10523:22;10493:62;;;10483:72;;10368:193;9989:582;;;;;;10578:491;;;;10716:2;10704:9;10695:7;10691:23;10687:32;10684:2;;;10732:1;10729;10722:12;10684:2;10767:1;10784:53;10829:7;10820:6;10809:9;10805:22;10784:53;;;10774:63;;10746:97;10874:2;10892:53;10937:7;10928:6;10917:9;10913:22;10892:53;;;10882:63;;10853:98;10982:2;11000:53;11045:7;11036:6;11025:9;11021:22;11000:53;;;10990:63;;10961:98;10678:391;;;;;;11076:239;;11179:2;11167:9;11158:7;11154:23;11150:32;11147:2;;;11195:1;11192;11185:12;11147:2;11230:1;11247:52;11291:7;11282:6;11271:9;11267:22;11247:52;;;11237:62;;11209:96;11141:174;;;;;11322:261;;11436:2;11424:9;11415:7;11411:23;11407:32;11404:2;;;11452:1;11449;11442:12;11404:2;11487:1;11504:63;11559:7;11550:6;11539:9;11535:22;11504:63;;;11494:73;;11466:107;11398:185;;;;;11590:869;;;;;;;11788:2;11776:9;11767:7;11763:23;11759:32;11756:2;;;11804:1;11801;11794:12;11756:2;11867:1;11856:9;11852:17;11839:31;11890:18;11882:6;11879:30;11876:2;;;11922:1;11919;11912:12;11876:2;11950:65;12007:7;11998:6;11987:9;11983:22;11950:65;;;11940:75;;;;11818:203;12080:2;12069:9;12065:18;12052:32;12104:18;12096:6;12093:30;12090:2;;;12136:1;12133;12126:12;12090:2;12164:65;12221:7;12212:6;12201:9;12197:22;12164:65;;;12154:75;;;;12031:204;12294:2;12283:9;12279:18;12266:32;12318:18;12310:6;12307:30;12304:2;;;12350:1;12347;12340:12;12304:2;12378:65;12435:7;12426:6;12415:9;12411:22;12378:65;;;12368:75;;;;12245:204;11750:709;;;;;;;;;12466:241;;12570:2;12558:9;12549:7;12545:23;12541:32;12538:2;;;12586:1;12583;12576:12;12538:2;12621:1;12638:53;12683:7;12674:6;12663:9;12659:22;12638:53;;;12628:63;;12600:97;12532:175;;;;;12715:173;;12802:46;12844:3;12836:6;12802:46;;;12877:4;12872:3;12868:14;12854:28;;12795:93;;;;;12897:189;;12992:54;13042:3;13034:6;12992:54;;;13075:4;13070:3;13066:14;13052:28;;12985:101;;;;;13094:142;13185:45;13224:5;13185:45;;;13180:3;13173:58;13167:69;;;13243:113;13326:24;13344:5;13326:24;;;13321:3;13314:37;13308:48;;;13396:660;13529:52;13575:5;13529:52;;;13594:84;13671:6;13666:3;13594:84;;;13587:91;;13699:54;13747:5;13699:54;;;13773:7;13801:1;13786:258;13811:6;13808:1;13805:13;13786:258;;;13878:6;13872:13;13899:63;13958:3;13943:13;13899:63;;;13892:70;;13979:58;14030:6;13979:58;;;13969:68;;13843:201;13833:1;13830;13826:9;13821:14;;13786:258;;;13790:14;13508:548;;;;;;14097:704;14248:52;14294:5;14248:52;;;14313:102;14408:6;14403:3;14313:102;;;14306:109;;14436:54;14484:5;14436:54;;;14510:7;14538:1;14523:266;14548:6;14545:1;14542:13;14523:266;;;14615:6;14609:13;14636:71;14703:3;14688:13;14636:71;;;14629:78;;14724:58;14775:6;14724:58;;;14714:68;;14580:209;14570:1;14567;14563:9;14558:14;;14523:266;;;14527:14;14227:574;;;;;;14842:624;14961:48;15003:5;14961:48;;;15022:74;15089:6;15084:3;15022:74;;;15015:81;;15117:50;15161:5;15117:50;;;15187:7;15215:1;15200:254;15225:6;15222:1;15219:13;15200:254;;;15292:6;15286:13;15313:63;15372:3;15357:13;15313:63;;;15306:70;;15393:54;15440:6;15393:54;;;15383:64;;15257:197;15247:1;15244;15240:9;15235:14;;15200:254;;;15204:14;14940:526;;;;;;15507:688;15654:48;15696:5;15654:48;;;15715:102;15810:6;15805:3;15715:102;;;15708:109;;15838:50;15882:5;15838:50;;;15908:7;15936:1;15921:262;15946:6;15943:1;15940:13;15921:262;;;16013:6;16007:13;16034:71;16101:3;16086:13;16034:71;;;16027:78;;16122:54;16169:6;16122:54;;;16112:64;;15978:205;15968:1;15965;15961:9;15956:14;;15921:262;;;15925:14;15633:562;;;;;;16203:104;16280:21;16295:5;16280:21;;;16275:3;16268:34;16262:45;;;16314:343;;16424:38;16456:5;16424:38;;;16474:70;16537:6;16532:3;16474:70;;;16467:77;;16549:52;16594:6;16589:3;16582:4;16575:5;16571:16;16549:52;;;16622:29;16644:6;16622:29;;;16617:3;16613:39;16606:46;;16404:253;;;;;;16664:347;;16776:39;16809:5;16776:39;;;16827:71;16891:6;16886:3;16827:71;;;16820:78;;16903:52;16948:6;16943:3;16936:4;16929:5;16925:16;16903:52;;;16976:29;16998:6;16976:29;;;16971:3;16967:39;16960:46;;16756:255;;;;;;17019:320;;17179:67;17243:2;17238:3;17179:67;;;17172:74;;17279:22;17275:1;17270:3;17266:11;17259:43;17330:2;17325:3;17321:12;17314:19;;17165:174;;;;17348:315;;17508:67;17572:2;17567:3;17508:67;;;17501:74;;17608:17;17604:1;17599:3;17595:11;17588:38;17654:2;17649:3;17645:12;17638:19;;17494:169;;;;17672:317;;17832:67;17896:2;17891:3;17832:67;;;17825:74;;17932:19;17928:1;17923:3;17919:11;17912:40;17980:2;17975:3;17971:12;17964:19;;17818:171;;;;17998:326;;18158:67;18222:2;18217:3;18158:67;;;18151:74;;18258:28;18254:1;18249:3;18245:11;18238:49;18315:2;18310:3;18306:12;18299:19;;18144:180;;;;18333:320;;18493:67;18557:2;18552:3;18493:67;;;18486:74;;18593:22;18589:1;18584:3;18580:11;18573:43;18644:2;18639:3;18635:12;18628:19;;18479:174;;;;18662:320;;18822:67;18886:2;18881:3;18822:67;;;18815:74;;18922:22;18918:1;18913:3;18909:11;18902:43;18973:2;18968:3;18964:12;18957:19;;18808:174;;;;18991:385;;19151:67;19215:2;19210:3;19151:67;;;19144:74;;19251:34;19247:1;19242:3;19238:11;19231:55;19320:18;19315:2;19310:3;19306:12;19299:40;19367:2;19362:3;19358:12;19351:19;;19137:239;;;;19385:323;;19545:67;19609:2;19604:3;19545:67;;;19538:74;;19645:25;19641:1;19636:3;19632:11;19625:46;19699:2;19694:3;19690:12;19683:19;;19531:177;;;;19771:456;19900:4;19895:3;19891:14;19980:4;19973:5;19969:16;19963:23;19992:63;20049:4;20044:3;20040:14;20026:12;19992:63;;;19920:141;20131:4;20124:5;20120:16;20114:23;20143:63;20200:4;20195:3;20191:14;20177:12;20143:63;;;20071:141;19873:354;;;;20289:540;20418:4;20413:3;20409:14;20498:4;20491:5;20487:16;20481:23;20510:105;20609:4;20604:3;20600:14;20586:12;20510:105;;;20438:183;20691:4;20684:5;20680:16;20674:23;20703:105;20802:4;20797:3;20793:14;20779:12;20703:105;;;20631:183;20391:438;;;;20889:757;21028:6;21023:3;21019:16;21110:4;21103:5;21099:16;21093:23;21122:109;21225:4;21220:3;21216:14;21202:12;21122:109;;;21050:187;21307:4;21300:5;21296:16;21290:23;21319:109;21422:4;21417:3;21413:14;21399:12;21319:109;;;21247:187;21504:4;21497:5;21493:16;21487:23;21516:109;21619:4;21614:3;21610:14;21596:12;21516:109;;;21444:187;21001:645;;;;21653:103;21726:24;21744:5;21726:24;;;21721:3;21714:37;21708:48;;;21763:113;21846:24;21864:5;21846:24;;;21841:3;21834:37;21828:48;;;21883:111;21964:24;21982:5;21964:24;;;21959:3;21952:37;21946:48;;;22001:152;22102:45;22122:24;22140:5;22122:24;;;22102:45;;;22097:3;22090:58;22084:69;;;22160:1338;;22577:75;22648:3;22639:6;22577:75;;;22674:2;22669:3;22665:12;22658:19;;22688:75;22759:3;22750:6;22688:75;;;22785:2;22780:3;22776:12;22769:19;;22799:117;22912:3;22903:6;22799:117;;;22938:2;22933:3;22929:12;22922:19;;22952:117;23065:3;23056:6;22952:117;;;23091:2;23086:3;23082:12;23075:19;;23105:75;23176:3;23167:6;23105:75;;;23202:2;23197:3;23193:12;23186:19;;23216:75;23287:3;23278:6;23216:75;;;23313:2;23308:3;23304:12;23297:19;;23327:121;23444:3;23435:6;23327:121;;;23470:2;23465:3;23461:12;23454:19;;23490:3;23483:10;;22565:933;;;;;;;;;;;23505:213;;23623:2;23612:9;23608:18;23600:26;;23637:71;23705:1;23694:9;23690:17;23681:6;23637:71;;;23594:124;;;;;23725:229;;23851:2;23840:9;23836:18;23828:26;;23865:79;23941:1;23930:9;23926:17;23917:6;23865:79;;;23822:132;;;;;23961:647;;24189:3;24178:9;24174:19;24166:27;;24204:79;24280:1;24269:9;24265:17;24256:6;24204:79;;;24294:72;24362:2;24351:9;24347:18;24338:6;24294:72;;;24377;24445:2;24434:9;24430:18;24421:6;24377:72;;;24497:9;24491:4;24487:20;24482:2;24471:9;24467:18;24460:48;24522:76;24593:4;24584:6;24522:76;;;24514:84;;24160:448;;;;;;;;24615:201;;24727:2;24716:9;24712:18;24704:26;;24741:65;24803:1;24792:9;24788:17;24779:6;24741:65;;;24698:118;;;;;24823:301;;24961:2;24950:9;24946:18;24938:26;;25011:9;25005:4;25001:20;24997:1;24986:9;24982:17;24975:47;25036:78;25109:4;25100:6;25036:78;;;25028:86;;24932:192;;;;;25131:407;;25322:2;25311:9;25307:18;25299:26;;25372:9;25366:4;25362:20;25358:1;25347:9;25343:17;25336:47;25397:131;25523:4;25397:131;;;25389:139;;25293:245;;;;25545:407;;25736:2;25725:9;25721:18;25713:26;;25786:9;25780:4;25776:20;25772:1;25761:9;25757:17;25750:47;25811:131;25937:4;25811:131;;;25803:139;;25707:245;;;;25959:407;;26150:2;26139:9;26135:18;26127:26;;26200:9;26194:4;26190:20;26186:1;26175:9;26171:17;26164:47;26225:131;26351:4;26225:131;;;26217:139;;26121:245;;;;26373:407;;26564:2;26553:9;26549:18;26541:26;;26614:9;26608:4;26604:20;26600:1;26589:9;26585:17;26578:47;26639:131;26765:4;26639:131;;;26631:139;;26535:245;;;;26787:407;;26978:2;26967:9;26963:18;26955:26;;27028:9;27022:4;27018:20;27014:1;27003:9;26999:17;26992:47;27053:131;27179:4;27053:131;;;27045:139;;26949:245;;;;27201:407;;27392:2;27381:9;27377:18;27369:26;;27442:9;27436:4;27432:20;27428:1;27417:9;27413:17;27406:47;27467:131;27593:4;27467:131;;;27459:139;;27363:245;;;;27615:407;;27806:2;27795:9;27791:18;27783:26;;27856:9;27850:4;27846:20;27842:1;27831:9;27827:17;27820:47;27881:131;28007:4;27881:131;;;27873:139;;27777:245;;;;28029:407;;28220:2;28209:9;28205:18;28197:26;;28270:9;28264:4;28260:20;28256:1;28245:9;28241:17;28234:47;28295:131;28421:4;28295:131;;;28287:139;;28191:245;;;;28443:510;;28681:3;28670:9;28666:19;28658:27;;28696:117;28810:1;28799:9;28795:17;28786:6;28696:117;;;28824:119;28938:3;28927:9;28923:19;28914:6;28824:119;;;28652:301;;;;;;28960:213;;29078:2;29067:9;29063:18;29055:26;;29092:71;29160:1;29149:9;29145:17;29136:6;29092:71;;;29049:124;;;;;29180:324;;29326:2;29315:9;29311:18;29303:26;;29340:71;29408:1;29397:9;29393:17;29384:6;29340:71;;;29422:72;29490:2;29479:9;29475:18;29466:6;29422:72;;;29297:207;;;;;;29511:256;;29573:2;29567:9;29557:19;;29611:4;29603:6;29599:17;29710:6;29698:10;29695:22;29674:18;29662:10;29659:34;29656:62;29653:2;;;29731:1;29728;29721:12;29653:2;29751:10;29747:2;29740:22;29551:216;;;;;29774:240;;29927:18;29919:6;29916:30;29913:2;;;29959:1;29956;29949:12;29913:2;29994:4;29986:6;29982:17;29974:25;;29850:164;;;;30021:244;;30178:18;30170:6;30167:30;30164:2;;;30210:1;30207;30200:12;30164:2;30245:4;30237:6;30233:17;30225:25;;30101:164;;;;30272:321;;30415:18;30407:6;30404:30;30401:2;;;30447:1;30444;30437:12;30401:2;30514:4;30510:9;30503:4;30495:6;30491:17;30487:33;30479:41;;30578:4;30572;30568:15;30560:23;;30338:255;;;;30600:322;;30744:18;30736:6;30733:30;30730:2;;;30776:1;30773;30766:12;30730:2;30843:4;30839:9;30832:4;30824:6;30820:17;30816:33;30808:41;;30907:4;30901;30897:15;30889:23;;30667:255;;;;30929:93;;31009:3;31001:11;;30995:27;;;;31029:97;;31113:3;31105:11;;31099:27;;;;31133:104;;31223:4;31213:14;;31201:36;;;;31244:108;;31338:4;31328:14;;31316:36;;;;31359:121;;31452:5;31446:12;31436:22;;31417:63;;;;31487:122;;31581:5;31575:12;31565:22;;31546:63;;;;31616:102;;31708:4;31703:3;31699:14;31691:22;;31685:33;;;;31725:106;;31821:4;31816:3;31812:14;31804:22;;31798:33;;;;31839:130;;31960:3;31945:18;;31938:31;;;;;31978:140;;32109:3;32094:18;;32087:31;;;;;32127:158;;32276:3;32261:18;;32254:31;;;;;32294:162;;32408:6;32403:3;32396:19;32445:4;32440:3;32436:14;32421:29;;32389:67;;;;;32465:163;;32580:6;32575:3;32568:19;32617:4;32612:3;32608:14;32593:29;;32561:67;;;;;32636:91;;32698:24;32716:5;32698:24;;;32687:35;;32681:46;;;;32734:85;;32807:5;32800:13;32793:21;32782:32;;32776:43;;;;32826:72;;32888:5;32877:16;;32871:27;;;;32905:144;;32977:66;32970:5;32966:78;32955:89;;32949:100;;;;33056:121;;33129:42;33122:5;33118:54;33107:65;;33101:76;;;;33184:72;;33246:5;33235:16;;33229:27;;;;33263:129;;33350:37;33381:5;33350:37;;;33337:50;;33331:61;;;;33399:121;;33478:37;33509:5;33478:37;;;33465:50;;33459:61;;;;33527:108;;33606:24;33624:5;33606:24;;;33593:37;;33587:48;;;;33643:145;33724:6;33719:3;33714;33701:30;33780:1;33771:6;33766:3;33762:16;33755:27;33694:94;;;;33797:268;33862:1;33869:101;33883:6;33880:1;33877:13;33869:101;;;33959:1;33954:3;33950:11;33944:18;33940:1;33935:3;33931:11;33924:39;33905:2;33902:1;33898:10;33893:15;;33869:101;;;33985:6;33982:1;33979:13;33976:2;;;34050:1;34041:6;34036:3;34032:16;34025:27;33976:2;33846:219;;;;;34073:74;;34137:5;34126:16;;34120:27;;;;34154:97;;34242:2;34238:7;34233:2;34226:5;34222:14;34218:28;34208:38;;34202:49;;;;34259:117;34328:24;34346:5;34328:24;;;34321:5;34318:35;34308:2;;34367:1;34364;34357:12;34308:2;34302:74;;34383:111;34449:21;34464:5;34449:21;;;34442:5;34439:32;34429:2;;34485:1;34482;34475:12;34429:2;34423:71;;34501:117;34570:24;34588:5;34570:24;;;34563:5;34560:35;34550:2;;34609:1;34606;34599:12;34550:2;34544:74;;34625:115;34693:23;34710:5;34693:23;;;34686:5;34683:34;34673:2;;34731:1;34728;34721:12;34673:2;34667:73;;34747:117;34816:24;34834:5;34816:24;;;34809:5;34806:35;34796:2;;34855:1;34852;34845:12;34796:2;34790:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n\nimport \"./ERC721Mintable.sol\";\nimport \"./verifier.sol\";\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\ncontract SolnSquareVerifier is CustomERC721Token{\n    Verifier v;\n// TODO define a solutions struct that can hold an index & an address\n    constructor(address owner) public {\n        v = Verifier(owner);\n    }\nstruct solution\n{\n    uint256 id;\n    address ad;\n}\n\n// TODO define an array of the above struct\nmapping(bytes32=>solution) Solutions;\n\n// TODO define a mapping to store unique solutions submitted\nmapping(uint256=>bytes32) submittedsolution;\n\n\n// TODO Create an event to emit when a solution is added\nevent SolutionAdded(uint256 index,address account);\n\n\n// TODO Create a function to add the solutions to the array and emit the event\nfunction addSolution(bytes32 token,uint256 _id,address _ad) public{\n    Solutions[token].id=_id;\n    Solutions[token].ad=_ad;\n    emit SolutionAdded(_id,_ad);\n}\n\n//Hey\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n    function mintToken(address account, uint256 index, Verifier.Proof memory proof, uint[2] memory input) public returns(bool) {\n    \n        require(v.verifyTx(proof,input),\"Not a valid proof\");\n          bytes32 key = keccak256(abi.encodePacked(proof.a.X, proof.a.Y, proof.b.X, proof.b.Y, proof.c.X, proof.c.Y, input));\n\n                require(Solutions[key].ad == address(0x0), \"Solution already exists\");\n\n                addSolution(key, index, account);\n\n                string memory baseTokenUri = super.getBaseTokenURI();\n\n                return super.mint(account, index, baseTokenUri);\n\n        \n    }\n}\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "G:/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7578
      ]
    },
    "id": 7579,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7427,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7428,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7429,
        "nodeType": "ImportDirective",
        "scope": 7579,
        "sourceUnit": 1101,
        "src": "175:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7430,
        "nodeType": "ImportDirective",
        "scope": 7579,
        "sourceUnit": 8501,
        "src": "206:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7431,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1100,
              "src": "366:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1100",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7432,
            "nodeType": "InheritanceSpecifier",
            "src": "366:17:3"
          }
        ],
        "contractDependencies": [
          69,
          130,
          176,
          649,
          947,
          1065,
          1100,
          7425
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7578,
        "linearizedBaseContracts": [
          7578,
          1100,
          1065,
          7425,
          947,
          649,
          176,
          130,
          69
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7434,
            "name": "v",
            "nodeType": "VariableDeclaration",
            "scope": 7578,
            "src": "389:10:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8500",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7433,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8500,
              "src": "389:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8500",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7445,
              "nodeType": "Block",
              "src": "509:36:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7439,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7434,
                      "src": "519:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8500",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7441,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7436,
                          "src": "532:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7440,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8500,
                        "src": "523:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8500_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "523:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8500",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "519:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8500",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7444,
                  "nodeType": "ExpressionStatement",
                  "src": "519:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 7446,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7436,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7446,
                  "src": "487:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:15:3"
            },
            "returnParameters": {
              "id": 7438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:0:3"
            },
            "scope": 7578,
            "src": "475:70:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.solution",
            "id": 7451,
            "members": [
              {
                "constant": false,
                "id": 7448,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 7451,
                "src": "568:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7447,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "568:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7450,
                "name": "ad",
                "nodeType": "VariableDeclaration",
                "scope": 7451,
                "src": "584:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7449,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "584:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "solution",
            "nodeType": "StructDefinition",
            "scope": 7578,
            "src": "546:51:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7455,
            "name": "Solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7578,
            "src": "643:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_solution_$7451_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.solution)"
            },
            "typeName": {
              "id": 7454,
              "keyType": {
                "id": 7452,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "651:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "643:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_solution_$7451_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7453,
                "name": "solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7451,
                "src": "660:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solution_$7451_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7459,
            "name": "submittedsolution",
            "nodeType": "VariableDeclaration",
            "scope": 7578,
            "src": "743:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 7458,
              "keyType": {
                "id": 7456,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "751:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "743:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 7457,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "760:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7465,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7461,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7465,
                  "src": "867:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7463,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7465,
                  "src": "881:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "866:31:3"
            },
            "src": "847:51:3"
          },
          {
            "body": {
              "id": 7493,
              "nodeType": "Block",
              "src": "1046:94:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7474,
                          "name": "Solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7455,
                          "src": "1052:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_solution_$7451_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.solution storage ref)"
                          }
                        },
                        "id": 7476,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7475,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7467,
                          "src": "1062:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1052:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_solution_$7451_storage",
                          "typeString": "struct SolnSquareVerifier.solution storage ref"
                        }
                      },
                      "id": 7477,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7448,
                      "src": "1052:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7478,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7469,
                      "src": "1072:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1052:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7480,
                  "nodeType": "ExpressionStatement",
                  "src": "1052:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7481,
                          "name": "Solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7455,
                          "src": "1081:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_solution_$7451_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.solution storage ref)"
                          }
                        },
                        "id": 7483,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7482,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7467,
                          "src": "1091:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1081:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_solution_$7451_storage",
                          "typeString": "struct SolnSquareVerifier.solution storage ref"
                        }
                      },
                      "id": 7484,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ad",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7450,
                      "src": "1081:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7485,
                      "name": "_ad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7471,
                      "src": "1101:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1081:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7487,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:23:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7489,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "1129:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7490,
                        "name": "_ad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7471,
                        "src": "1133:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7488,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7465,
                      "src": "1115:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7492,
                  "nodeType": "EmitStatement",
                  "src": "1110:27:3"
                }
              ]
            },
            "documentation": null,
            "id": 7494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7467,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 7494,
                  "src": "1001:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7466,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7469,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 7494,
                  "src": "1015:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7471,
                  "name": "_ad",
                  "nodeType": "VariableDeclaration",
                  "scope": 7494,
                  "src": "1027:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1000:39:3"
            },
            "returnParameters": {
              "id": 7473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1046:0:3"
            },
            "scope": 7578,
            "src": "980:160:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7576,
              "nodeType": "Block",
              "src": "1484:486:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7512,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7500,
                            "src": "1518:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7513,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7504,
                            "src": "1524:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7510,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7434,
                            "src": "1507:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8500",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8499,
                          "src": "1507:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8174_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 7514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1507:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420612076616c69642070726f6f66",
                        "id": 7515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1531:19:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2380d3714e3f439d29cadc78d51ffe5c3d9ef75f6fb680eb767b422aeaca2229",
                          "typeString": "literal_string \"Not a valid proof\""
                        },
                        "value": "Not a valid proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2380d3714e3f439d29cadc78d51ffe5c3d9ef75f6fb680eb767b422aeaca2229",
                          "typeString": "literal_string \"Not a valid proof\""
                        }
                      ],
                      "id": 7509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8845,
                        8846
                      ],
                      "referencedDeclaration": 8846,
                      "src": "1499:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1499:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7517,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:52:3"
                },
                {
                  "assignments": [
                    7519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7519,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7576,
                      "src": "1563:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7518,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1563:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7544,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7523,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7500,
                                "src": "1604:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7524,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8169,
                              "src": "1604:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7586_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7525,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7583,
                            "src": "1604:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7526,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7500,
                                "src": "1615:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7527,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8169,
                              "src": "1615:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7586_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7528,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7585,
                            "src": "1615:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7529,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7500,
                                "src": "1626:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7530,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8171,
                              "src": "1626:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7595_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7531,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7590,
                            "src": "1626:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7532,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7500,
                                "src": "1637:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7533,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8171,
                              "src": "1637:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7595_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7534,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7594,
                            "src": "1637:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7535,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7500,
                                "src": "1648:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7536,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8173,
                              "src": "1648:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7586_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7537,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7583,
                            "src": "1648:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7538,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7500,
                                "src": "1659:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7539,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8173,
                              "src": "1659:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7586_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7540,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7585,
                            "src": "1659:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7541,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7504,
                            "src": "1670:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7521,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8829,
                            "src": "1587:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1587:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1587:89:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7520,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8836,
                      "src": "1577:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:100:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1563:114:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7546,
                              "name": "Solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7455,
                              "src": "1704:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_solution_$7451_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.solution storage ref)"
                              }
                            },
                            "id": 7548,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7547,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7519,
                              "src": "1714:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1704:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_solution_$7451_storage",
                              "typeString": "struct SolnSquareVerifier.solution storage ref"
                            }
                          },
                          "id": 7549,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ad",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7450,
                          "src": "1704:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 7551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1733:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1725:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1725:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1704:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920657869737473",
                        "id": 7554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1739:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        },
                        "value": "Solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        }
                      ],
                      "id": 7545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8845,
                        8846
                      ],
                      "referencedDeclaration": 8846,
                      "src": "1696:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7556,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:69:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7558,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "1796:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7559,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7498,
                        "src": "1801:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7560,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7496,
                        "src": "1808:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7557,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7494,
                      "src": "1784:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256,address)"
                      }
                    },
                    "id": 7561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7562,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:32:3"
                },
                {
                  "assignments": [
                    7564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7564,
                      "name": "baseTokenUri",
                      "nodeType": "VariableDeclaration",
                      "scope": 7576,
                      "src": "1835:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 7563,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1835:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7568,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7565,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8897,
                        "src": "1864:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7578",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBaseTokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 998,
                      "src": "1864:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 7567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1864:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1835:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7571,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7496,
                        "src": "1924:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7572,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7498,
                        "src": "1933:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7573,
                        "name": "baseTokenUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7564,
                        "src": "1940:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7569,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8897,
                        "src": "1913:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7578",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1099,
                      "src": "1913:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 7574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7508,
                  "id": 7575,
                  "nodeType": "Return",
                  "src": "1906:47:3"
                }
              ]
            },
            "documentation": null,
            "id": 7577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7496,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "1380:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7498,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "1397:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7500,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "1412:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7499,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8174,
                    "src": "1412:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8174_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7504,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "1441:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7501,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1441:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7503,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1446:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1441:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1379:83:3"
            },
            "returnParameters": {
              "id": 7508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7507,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7577,
                  "src": "1478:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7506,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1478:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1477:6:3"
            },
            "scope": 7578,
            "src": "1361:609:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7579,
        "src": "335:1637:3"
      }
    ],
    "src": "0:2002:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7578
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7427,
        "name": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7428,
        "name": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "attributes": {
          "SourceUnit": 1101,
          "absolutePath": "/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7579,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7429,
        "name": "ImportDirective",
        "src": "175:30:3"
      },
      {
        "attributes": {
          "SourceUnit": 8501,
          "absolutePath": "/G/Udacity_blockchain/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7579,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7430,
        "name": "ImportDirective",
        "src": "206:24:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            69,
            130,
            176,
            649,
            947,
            1065,
            1100,
            7425
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7578,
            1100,
            1065,
            7425,
            947,
            649,
            176,
            130,
            69
          ],
          "name": "SolnSquareVerifier",
          "scope": 7579
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1100,
                  "type": "contract CustomERC721Token"
                },
                "id": 7431,
                "name": "UserDefinedTypeName",
                "src": "366:17:3"
              }
            ],
            "id": 7432,
            "name": "InheritanceSpecifier",
            "src": "366:17:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "v",
              "scope": 7578,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8500,
                  "type": "contract Verifier"
                },
                "id": 7433,
                "name": "UserDefinedTypeName",
                "src": "389:8:3"
              }
            ],
            "id": 7434,
            "name": "VariableDeclaration",
            "src": "389:10:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7578,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 7446,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7435,
                        "name": "ElementaryTypeName",
                        "src": "487:7:3"
                      }
                    ],
                    "id": 7436,
                    "name": "VariableDeclaration",
                    "src": "487:13:3"
                  }
                ],
                "id": 7437,
                "name": "ParameterList",
                "src": "486:15:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7438,
                "name": "ParameterList",
                "src": "509:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7434,
                              "type": "contract Verifier",
                              "value": "v"
                            },
                            "id": 7439,
                            "name": "Identifier",
                            "src": "519:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8500,
                                  "type": "type(contract Verifier)",
                                  "value": "Verifier"
                                },
                                "id": 7440,
                                "name": "Identifier",
                                "src": "523:8:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7436,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 7441,
                                "name": "Identifier",
                                "src": "532:5:3"
                              }
                            ],
                            "id": 7442,
                            "name": "FunctionCall",
                            "src": "523:15:3"
                          }
                        ],
                        "id": 7443,
                        "name": "Assignment",
                        "src": "519:19:3"
                      }
                    ],
                    "id": 7444,
                    "name": "ExpressionStatement",
                    "src": "519:19:3"
                  }
                ],
                "id": 7445,
                "name": "Block",
                "src": "509:36:3"
              }
            ],
            "id": 7446,
            "name": "FunctionDefinition",
            "src": "475:70:3"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.solution",
              "name": "solution",
              "scope": 7578,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "id",
                  "scope": 7451,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7447,
                    "name": "ElementaryTypeName",
                    "src": "568:7:3"
                  }
                ],
                "id": 7448,
                "name": "VariableDeclaration",
                "src": "568:10:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "ad",
                  "scope": 7451,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7449,
                    "name": "ElementaryTypeName",
                    "src": "584:7:3"
                  }
                ],
                "id": 7450,
                "name": "VariableDeclaration",
                "src": "584:10:3"
              }
            ],
            "id": 7451,
            "name": "StructDefinition",
            "src": "546:51:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "Solutions",
              "scope": 7578,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7452,
                    "name": "ElementaryTypeName",
                    "src": "651:7:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "solution",
                      "referencedDeclaration": 7451,
                      "type": "struct SolnSquareVerifier.solution"
                    },
                    "id": 7453,
                    "name": "UserDefinedTypeName",
                    "src": "660:8:3"
                  }
                ],
                "id": 7454,
                "name": "Mapping",
                "src": "643:26:3"
              }
            ],
            "id": 7455,
            "name": "VariableDeclaration",
            "src": "643:36:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "submittedsolution",
              "scope": 7578,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => bytes32)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => bytes32)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7456,
                    "name": "ElementaryTypeName",
                    "src": "751:7:3"
                  },
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7457,
                    "name": "ElementaryTypeName",
                    "src": "760:7:3"
                  }
                ],
                "id": 7458,
                "name": "Mapping",
                "src": "743:25:3"
              }
            ],
            "id": 7459,
            "name": "VariableDeclaration",
            "src": "743:43:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "index",
                      "scope": 7465,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7460,
                        "name": "ElementaryTypeName",
                        "src": "867:7:3"
                      }
                    ],
                    "id": 7461,
                    "name": "VariableDeclaration",
                    "src": "867:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "account",
                      "scope": 7465,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7462,
                        "name": "ElementaryTypeName",
                        "src": "881:7:3"
                      }
                    ],
                    "id": 7463,
                    "name": "VariableDeclaration",
                    "src": "881:15:3"
                  }
                ],
                "id": 7464,
                "name": "ParameterList",
                "src": "866:31:3"
              }
            ],
            "id": 7465,
            "name": "EventDefinition",
            "src": "847:51:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7578,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 7494,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7466,
                        "name": "ElementaryTypeName",
                        "src": "1001:7:3"
                      }
                    ],
                    "id": 7467,
                    "name": "VariableDeclaration",
                    "src": "1001:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_id",
                      "scope": 7494,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7468,
                        "name": "ElementaryTypeName",
                        "src": "1015:7:3"
                      }
                    ],
                    "id": 7469,
                    "name": "VariableDeclaration",
                    "src": "1015:11:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_ad",
                      "scope": 7494,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7470,
                        "name": "ElementaryTypeName",
                        "src": "1027:7:3"
                      }
                    ],
                    "id": 7471,
                    "name": "VariableDeclaration",
                    "src": "1027:11:3"
                  }
                ],
                "id": 7472,
                "name": "ParameterList",
                "src": "1000:39:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7473,
                "name": "ParameterList",
                "src": "1046:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "id",
                              "referencedDeclaration": 7448,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7455,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.solution storage ref)",
                                      "value": "Solutions"
                                    },
                                    "id": 7474,
                                    "name": "Identifier",
                                    "src": "1052:9:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7467,
                                      "type": "bytes32",
                                      "value": "token"
                                    },
                                    "id": 7475,
                                    "name": "Identifier",
                                    "src": "1062:5:3"
                                  }
                                ],
                                "id": 7476,
                                "name": "IndexAccess",
                                "src": "1052:16:3"
                              }
                            ],
                            "id": 7477,
                            "name": "MemberAccess",
                            "src": "1052:19:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7469,
                              "type": "uint256",
                              "value": "_id"
                            },
                            "id": 7478,
                            "name": "Identifier",
                            "src": "1072:3:3"
                          }
                        ],
                        "id": 7479,
                        "name": "Assignment",
                        "src": "1052:23:3"
                      }
                    ],
                    "id": 7480,
                    "name": "ExpressionStatement",
                    "src": "1052:23:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "ad",
                              "referencedDeclaration": 7450,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7455,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.solution storage ref)",
                                      "value": "Solutions"
                                    },
                                    "id": 7481,
                                    "name": "Identifier",
                                    "src": "1081:9:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7467,
                                      "type": "bytes32",
                                      "value": "token"
                                    },
                                    "id": 7482,
                                    "name": "Identifier",
                                    "src": "1091:5:3"
                                  }
                                ],
                                "id": 7483,
                                "name": "IndexAccess",
                                "src": "1081:16:3"
                              }
                            ],
                            "id": 7484,
                            "name": "MemberAccess",
                            "src": "1081:19:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7471,
                              "type": "address",
                              "value": "_ad"
                            },
                            "id": 7485,
                            "name": "Identifier",
                            "src": "1101:3:3"
                          }
                        ],
                        "id": 7486,
                        "name": "Assignment",
                        "src": "1081:23:3"
                      }
                    ],
                    "id": 7487,
                    "name": "ExpressionStatement",
                    "src": "1081:23:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7465,
                              "type": "function (uint256,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7488,
                            "name": "Identifier",
                            "src": "1115:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7469,
                              "type": "uint256",
                              "value": "_id"
                            },
                            "id": 7489,
                            "name": "Identifier",
                            "src": "1129:3:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7471,
                              "type": "address",
                              "value": "_ad"
                            },
                            "id": 7490,
                            "name": "Identifier",
                            "src": "1133:3:3"
                          }
                        ],
                        "id": 7491,
                        "name": "FunctionCall",
                        "src": "1115:22:3"
                      }
                    ],
                    "id": 7492,
                    "name": "EmitStatement",
                    "src": "1110:27:3"
                  }
                ],
                "id": 7493,
                "name": "Block",
                "src": "1046:94:3"
              }
            ],
            "id": 7494,
            "name": "FunctionDefinition",
            "src": "980:160:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintToken",
              "scope": 7578,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 7577,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7495,
                        "name": "ElementaryTypeName",
                        "src": "1380:7:3"
                      }
                    ],
                    "id": 7496,
                    "name": "VariableDeclaration",
                    "src": "1380:15:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 7577,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7497,
                        "name": "ElementaryTypeName",
                        "src": "1397:7:3"
                      }
                    ],
                    "id": 7498,
                    "name": "VariableDeclaration",
                    "src": "1397:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7577,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier.Proof",
                          "referencedDeclaration": 8174,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7499,
                        "name": "UserDefinedTypeName",
                        "src": "1412:14:3"
                      }
                    ],
                    "id": 7500,
                    "name": "VariableDeclaration",
                    "src": "1412:27:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7577,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7501,
                            "name": "ElementaryTypeName",
                            "src": "1441:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7502,
                            "name": "Literal",
                            "src": "1446:1:3"
                          }
                        ],
                        "id": 7503,
                        "name": "ArrayTypeName",
                        "src": "1441:7:3"
                      }
                    ],
                    "id": 7504,
                    "name": "VariableDeclaration",
                    "src": "1441:20:3"
                  }
                ],
                "id": 7505,
                "name": "ParameterList",
                "src": "1379:83:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7577,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7506,
                        "name": "ElementaryTypeName",
                        "src": "1478:4:3"
                      }
                    ],
                    "id": 7507,
                    "name": "VariableDeclaration",
                    "src": "1478:4:3"
                  }
                ],
                "id": 7508,
                "name": "ParameterList",
                "src": "1477:6:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2380d3714e3f439d29cadc78d51ffe5c3d9ef75f6fb680eb767b422aeaca2229",
                                  "typeString": "literal_string \"Not a valid proof\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8845,
                                8846
                              ],
                              "referencedDeclaration": 8846,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7509,
                            "name": "Identifier",
                            "src": "1499:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$8174_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 8499,
                                  "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7434,
                                      "type": "contract Verifier",
                                      "value": "v"
                                    },
                                    "id": 7510,
                                    "name": "Identifier",
                                    "src": "1507:1:3"
                                  }
                                ],
                                "id": 7511,
                                "name": "MemberAccess",
                                "src": "1507:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7500,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7512,
                                "name": "Identifier",
                                "src": "1518:5:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7504,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7513,
                                "name": "Identifier",
                                "src": "1524:5:3"
                              }
                            ],
                            "id": 7514,
                            "name": "FunctionCall",
                            "src": "1507:23:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f7420612076616c69642070726f6f66",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Not a valid proof\"",
                              "value": "Not a valid proof"
                            },
                            "id": 7515,
                            "name": "Literal",
                            "src": "1531:19:3"
                          }
                        ],
                        "id": 7516,
                        "name": "FunctionCall",
                        "src": "1499:52:3"
                      }
                    ],
                    "id": 7517,
                    "name": "ExpressionStatement",
                    "src": "1499:52:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7519
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7576,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7518,
                            "name": "ElementaryTypeName",
                            "src": "1563:7:3"
                          }
                        ],
                        "id": 7519,
                        "name": "VariableDeclaration",
                        "src": "1563:11:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8836,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7520,
                            "name": "Identifier",
                            "src": "1577:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8829,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7521,
                                    "name": "Identifier",
                                    "src": "1587:3:3"
                                  }
                                ],
                                "id": 7522,
                                "name": "MemberAccess",
                                "src": "1587:16:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 7583,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "a",
                                      "referencedDeclaration": 8169,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7500,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7523,
                                        "name": "Identifier",
                                        "src": "1604:5:3"
                                      }
                                    ],
                                    "id": 7524,
                                    "name": "MemberAccess",
                                    "src": "1604:7:3"
                                  }
                                ],
                                "id": 7525,
                                "name": "MemberAccess",
                                "src": "1604:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 7585,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "a",
                                      "referencedDeclaration": 8169,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7500,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7526,
                                        "name": "Identifier",
                                        "src": "1615:5:3"
                                      }
                                    ],
                                    "id": 7527,
                                    "name": "MemberAccess",
                                    "src": "1615:7:3"
                                  }
                                ],
                                "id": 7528,
                                "name": "MemberAccess",
                                "src": "1615:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 7590,
                                  "type": "uint256[2] memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "b",
                                      "referencedDeclaration": 8171,
                                      "type": "struct Pairing.G2Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7500,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7529,
                                        "name": "Identifier",
                                        "src": "1626:5:3"
                                      }
                                    ],
                                    "id": 7530,
                                    "name": "MemberAccess",
                                    "src": "1626:7:3"
                                  }
                                ],
                                "id": 7531,
                                "name": "MemberAccess",
                                "src": "1626:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 7594,
                                  "type": "uint256[2] memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "b",
                                      "referencedDeclaration": 8171,
                                      "type": "struct Pairing.G2Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7500,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7532,
                                        "name": "Identifier",
                                        "src": "1637:5:3"
                                      }
                                    ],
                                    "id": 7533,
                                    "name": "MemberAccess",
                                    "src": "1637:7:3"
                                  }
                                ],
                                "id": 7534,
                                "name": "MemberAccess",
                                "src": "1637:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 7583,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "c",
                                      "referencedDeclaration": 8173,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7500,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7535,
                                        "name": "Identifier",
                                        "src": "1648:5:3"
                                      }
                                    ],
                                    "id": 7536,
                                    "name": "MemberAccess",
                                    "src": "1648:7:3"
                                  }
                                ],
                                "id": 7537,
                                "name": "MemberAccess",
                                "src": "1648:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 7585,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "c",
                                      "referencedDeclaration": 8173,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7500,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7538,
                                        "name": "Identifier",
                                        "src": "1659:5:3"
                                      }
                                    ],
                                    "id": 7539,
                                    "name": "MemberAccess",
                                    "src": "1659:7:3"
                                  }
                                ],
                                "id": 7540,
                                "name": "MemberAccess",
                                "src": "1659:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7504,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7541,
                                "name": "Identifier",
                                "src": "1670:5:3"
                              }
                            ],
                            "id": 7542,
                            "name": "FunctionCall",
                            "src": "1587:89:3"
                          }
                        ],
                        "id": 7543,
                        "name": "FunctionCall",
                        "src": "1577:100:3"
                      }
                    ],
                    "id": 7544,
                    "name": "VariableDeclarationStatement",
                    "src": "1563:114:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                                  "typeString": "literal_string \"Solution already exists\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8845,
                                8846
                              ],
                              "referencedDeclaration": 8846,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7545,
                            "name": "Identifier",
                            "src": "1696:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "ad",
                                  "referencedDeclaration": 7450,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7455,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.solution storage ref)",
                                          "value": "Solutions"
                                        },
                                        "id": 7546,
                                        "name": "Identifier",
                                        "src": "1704:9:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7519,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7547,
                                        "name": "Identifier",
                                        "src": "1714:3:3"
                                      }
                                    ],
                                    "id": 7548,
                                    "name": "IndexAccess",
                                    "src": "1704:14:3"
                                  }
                                ],
                                "id": 7549,
                                "name": "MemberAccess",
                                "src": "1704:17:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7550,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1725:7:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "307830",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0x0"
                                    },
                                    "id": 7551,
                                    "name": "Literal",
                                    "src": "1733:3:3"
                                  }
                                ],
                                "id": 7552,
                                "name": "FunctionCall",
                                "src": "1725:12:3"
                              }
                            ],
                            "id": 7553,
                            "name": "BinaryOperation",
                            "src": "1704:33:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c726561647920657869737473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already exists\"",
                              "value": "Solution already exists"
                            },
                            "id": 7554,
                            "name": "Literal",
                            "src": "1739:25:3"
                          }
                        ],
                        "id": 7555,
                        "name": "FunctionCall",
                        "src": "1696:69:3"
                      }
                    ],
                    "id": 7556,
                    "name": "ExpressionStatement",
                    "src": "1696:69:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7494,
                              "type": "function (bytes32,uint256,address)",
                              "value": "addSolution"
                            },
                            "id": 7557,
                            "name": "Identifier",
                            "src": "1784:11:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7519,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7558,
                            "name": "Identifier",
                            "src": "1796:3:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7498,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7559,
                            "name": "Identifier",
                            "src": "1801:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7496,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 7560,
                            "name": "Identifier",
                            "src": "1808:7:3"
                          }
                        ],
                        "id": 7561,
                        "name": "FunctionCall",
                        "src": "1784:32:3"
                      }
                    ],
                    "id": 7562,
                    "name": "ExpressionStatement",
                    "src": "1784:32:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7564
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "baseTokenUri",
                          "scope": 7576,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 7563,
                            "name": "ElementaryTypeName",
                            "src": "1835:6:3"
                          }
                        ],
                        "id": 7564,
                        "name": "VariableDeclaration",
                        "src": "1835:26:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "string memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getBaseTokenURI",
                              "referencedDeclaration": 998,
                              "type": "function () view returns (string memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8897,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7565,
                                "name": "Identifier",
                                "src": "1864:5:3"
                              }
                            ],
                            "id": 7566,
                            "name": "MemberAccess",
                            "src": "1864:21:3"
                          }
                        ],
                        "id": 7567,
                        "name": "FunctionCall",
                        "src": "1864:23:3"
                      }
                    ],
                    "id": 7568,
                    "name": "VariableDeclarationStatement",
                    "src": "1835:52:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7508
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1099,
                              "type": "function (address,uint256,string memory) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8897,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7569,
                                "name": "Identifier",
                                "src": "1913:5:3"
                              }
                            ],
                            "id": 7570,
                            "name": "MemberAccess",
                            "src": "1913:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7496,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 7571,
                            "name": "Identifier",
                            "src": "1924:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7498,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7572,
                            "name": "Identifier",
                            "src": "1933:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7564,
                              "type": "string memory",
                              "value": "baseTokenUri"
                            },
                            "id": 7573,
                            "name": "Identifier",
                            "src": "1940:12:3"
                          }
                        ],
                        "id": 7574,
                        "name": "FunctionCall",
                        "src": "1913:40:3"
                      }
                    ],
                    "id": 7575,
                    "name": "Return",
                    "src": "1906:47:3"
                  }
                ],
                "id": 7576,
                "name": "Block",
                "src": "1484:486:3"
              }
            ],
            "id": 7577,
            "name": "FunctionDefinition",
            "src": "1361:609:3"
          }
        ],
        "id": 7578,
        "name": "ContractDefinition",
        "src": "335:1637:3"
      }
    ],
    "id": 7579,
    "name": "SourceUnit",
    "src": "0:2002:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xCbBBa642Aa255Bd8E1B801a1F5aA51a81C3DfE61",
      "transactionHash": "0xedd3f0be48eaebcca9d46c5f9bfda2f584817b1b2a708b73a20e5ccac053d167"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2022-07-16T19:50:07.843Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}